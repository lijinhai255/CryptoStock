{
	"id": "04b88d2a0dda478d18ac99538cbc88ab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"CryptoStockContract/contracts/OracleAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@pythnetwork/pyth-sdk-solidity/IPyth.sol\";\nimport \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\";\n\ncontract AggregatorPythView {\n    IPyth public pyth;\n    bytes32 public priceFeedId;\n\n    constructor(address pythContract, bytes32 _priceFeedId) {\n        pyth = IPyth(pythContract);\n        priceFeedId = _priceFeedId;\n    }\n\n    /// @notice 只读查询价格，不需要fee，只消耗普通查询gas\n    function getLatestPriceView() external view returns (int64 price, int32 expo, uint publishTime) {\n        // 查询最新价格（假设之前已经有人 updatePriceFeeds）\n        PythStructs.Price memory p = pyth.getPriceUnsafe(priceFeedId);\n        price       = p.price;      // 实际值\n        expo        = p.expo;       // 精度指数\n        publishTime = p.publishTime;// 发布时间戳\n        // 价格可能是0，说明还没有人推送最新priceUpdate\n    }\n}\n"
			},
			"@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n\n    struct TwapPriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Start time of the TWAP\n        uint64 startTime;\n        // End time of the TWAP\n        uint64 endTime;\n        // TWAP price\n        Price twap;\n        // Down slot ratio represents the ratio of price feed updates that were missed or unavailable\n        // during the TWAP period, expressed as a fixed-point number between 0 and 1e6 (100%).\n        // For example:\n        //   - 0 means all price updates were available\n        //   - 500_000 means 50% of updates were missed\n        //   - 1_000_000 means all updates were missed\n        // This can be used to assess the quality/reliability of the TWAP calculation.\n        // Applications should define a maximum acceptable ratio (e.g. 100000 for 10%)\n        // and revert if downSlotsRatio exceeds it.\n        uint32 downSlotsRatio;\n    }\n\n    // Information used to calculate time-weighted average prices (TWAP)\n    struct TwapPriceInfo {\n        // slot 1\n        int128 cumulativePrice;\n        uint128 cumulativeConf;\n        // slot 2\n        uint64 numDownSlots;\n        uint64 publishSlot;\n        uint64 publishTime;\n        uint64 prevPublishTime;\n        // slot 3\n        int32 expo;\n    }\n}\n"
			},
			"@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Returns the required fee to update a TWAP price.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getTwapUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// This method will eventually allow the caller to determine whether parsed price feeds should update\n    /// the stored values as well.\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @param storeUpdatesIfFresh flag for the parse function to\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesWithConfig(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minAllowedPublishTime,\n        uint64 maxAllowedPublishTime,\n        bool checkUniqueness,\n        bool checkUpdateDataIsMinimal,\n        bool storeUpdatesIfFresh\n    )\n        external\n        payable\n        returns (\n            PythStructs.PriceFeed[] memory priceFeeds,\n            uint64[] memory slots\n        );\n\n    /// @notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n    ///\n    /// This method calculates TWAP between two data points by processing the difference in cumulative price values\n    /// divided by the time period. It requires exactly two updates that contain valid price information\n    /// for all the requested price IDs.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the updateData array.\n    ///\n    /// @dev Reverts if:\n    /// - The transferred fee is not sufficient\n    /// - The updateData is invalid or malformed\n    /// - The updateData array does not contain exactly 2 updates\n    /// - There is no update for any of the given `priceIds`\n    /// - The time ordering between data points is invalid (start time must be before end time)\n    /// @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n    /// @param priceIds Array of price ids to calculate TWAP for\n    /// @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\n    function parseTwapPriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds\n    )\n        external\n        payable\n        returns (PythStructs.TwapPriceFeed[] memory twapPriceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"
			},
			"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n\n    /// @dev Emitted when the TWAP price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param startTime Start time of the TWAP.\n    /// @param endTime End time of the TWAP.\n    /// @param twapPrice Price of the TWAP.\n    /// @param twapConf Confidence interval of the TWAP.\n    /// @param downSlotsRatio Down slot ratio of the TWAP.\n    event TwapPriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 startTime,\n        uint64 endTime,\n        int64 twapPrice,\n        uint64 twapConf,\n        uint32 downSlotsRatio\n    );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
				"IPyth": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "publishTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "int64",
									"name": "price",
									"type": "int64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "conf",
									"type": "uint64"
								}
							],
							"name": "PriceFeedUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "int64",
									"name": "twapPrice",
									"type": "int64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "twapConf",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "downSlotsRatio",
									"type": "uint32"
								}
							],
							"name": "TwapPriceFeedUpdate",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "age",
									"type": "uint256"
								}
							],
							"name": "getEmaPriceNoOlderThan",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "price",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "conf",
											"type": "uint64"
										},
										{
											"internalType": "int32",
											"name": "expo",
											"type": "int32"
										},
										{
											"internalType": "uint256",
											"name": "publishTime",
											"type": "uint256"
										}
									],
									"internalType": "struct PythStructs.Price",
									"name": "price",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getEmaPriceUnsafe",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "price",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "conf",
											"type": "uint64"
										},
										{
											"internalType": "int32",
											"name": "expo",
											"type": "int32"
										},
										{
											"internalType": "uint256",
											"name": "publishTime",
											"type": "uint256"
										}
									],
									"internalType": "struct PythStructs.Price",
									"name": "price",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "age",
									"type": "uint256"
								}
							],
							"name": "getPriceNoOlderThan",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "price",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "conf",
											"type": "uint64"
										},
										{
											"internalType": "int32",
											"name": "expo",
											"type": "int32"
										},
										{
											"internalType": "uint256",
											"name": "publishTime",
											"type": "uint256"
										}
									],
									"internalType": "struct PythStructs.Price",
									"name": "price",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getPriceUnsafe",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "price",
											"type": "int64"
										},
										{
											"internalType": "uint64",
											"name": "conf",
											"type": "uint64"
										},
										{
											"internalType": "int32",
											"name": "expo",
											"type": "int32"
										},
										{
											"internalType": "uint256",
											"name": "publishTime",
											"type": "uint256"
										}
									],
									"internalType": "struct PythStructs.Price",
									"name": "price",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								}
							],
							"name": "getTwapUpdateFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "feeAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								}
							],
							"name": "getUpdateFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "feeAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "priceIds",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint64",
									"name": "minPublishTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "maxPublishTime",
									"type": "uint64"
								}
							],
							"name": "parsePriceFeedUpdates",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "int64",
													"name": "price",
													"type": "int64"
												},
												{
													"internalType": "uint64",
													"name": "conf",
													"type": "uint64"
												},
												{
													"internalType": "int32",
													"name": "expo",
													"type": "int32"
												},
												{
													"internalType": "uint256",
													"name": "publishTime",
													"type": "uint256"
												}
											],
											"internalType": "struct PythStructs.Price",
											"name": "price",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "int64",
													"name": "price",
													"type": "int64"
												},
												{
													"internalType": "uint64",
													"name": "conf",
													"type": "uint64"
												},
												{
													"internalType": "int32",
													"name": "expo",
													"type": "int32"
												},
												{
													"internalType": "uint256",
													"name": "publishTime",
													"type": "uint256"
												}
											],
											"internalType": "struct PythStructs.Price",
											"name": "emaPrice",
											"type": "tuple"
										}
									],
									"internalType": "struct PythStructs.PriceFeed[]",
									"name": "priceFeeds",
									"type": "tuple[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "priceIds",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint64",
									"name": "minPublishTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "maxPublishTime",
									"type": "uint64"
								}
							],
							"name": "parsePriceFeedUpdatesUnique",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "int64",
													"name": "price",
													"type": "int64"
												},
												{
													"internalType": "uint64",
													"name": "conf",
													"type": "uint64"
												},
												{
													"internalType": "int32",
													"name": "expo",
													"type": "int32"
												},
												{
													"internalType": "uint256",
													"name": "publishTime",
													"type": "uint256"
												}
											],
											"internalType": "struct PythStructs.Price",
											"name": "price",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "int64",
													"name": "price",
													"type": "int64"
												},
												{
													"internalType": "uint64",
													"name": "conf",
													"type": "uint64"
												},
												{
													"internalType": "int32",
													"name": "expo",
													"type": "int32"
												},
												{
													"internalType": "uint256",
													"name": "publishTime",
													"type": "uint256"
												}
											],
											"internalType": "struct PythStructs.Price",
											"name": "emaPrice",
											"type": "tuple"
										}
									],
									"internalType": "struct PythStructs.PriceFeed[]",
									"name": "priceFeeds",
									"type": "tuple[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "priceIds",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint64",
									"name": "minAllowedPublishTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "maxAllowedPublishTime",
									"type": "uint64"
								},
								{
									"internalType": "bool",
									"name": "checkUniqueness",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "checkUpdateDataIsMinimal",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "storeUpdatesIfFresh",
									"type": "bool"
								}
							],
							"name": "parsePriceFeedUpdatesWithConfig",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"components": [
												{
													"internalType": "int64",
													"name": "price",
													"type": "int64"
												},
												{
													"internalType": "uint64",
													"name": "conf",
													"type": "uint64"
												},
												{
													"internalType": "int32",
													"name": "expo",
													"type": "int32"
												},
												{
													"internalType": "uint256",
													"name": "publishTime",
													"type": "uint256"
												}
											],
											"internalType": "struct PythStructs.Price",
											"name": "price",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "int64",
													"name": "price",
													"type": "int64"
												},
												{
													"internalType": "uint64",
													"name": "conf",
													"type": "uint64"
												},
												{
													"internalType": "int32",
													"name": "expo",
													"type": "int32"
												},
												{
													"internalType": "uint256",
													"name": "publishTime",
													"type": "uint256"
												}
											],
											"internalType": "struct PythStructs.Price",
											"name": "emaPrice",
											"type": "tuple"
										}
									],
									"internalType": "struct PythStructs.PriceFeed[]",
									"name": "priceFeeds",
									"type": "tuple[]"
								},
								{
									"internalType": "uint64[]",
									"name": "slots",
									"type": "uint64[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "priceIds",
									"type": "bytes32[]"
								}
							],
							"name": "parseTwapPriceFeedUpdates",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"components": [
												{
													"internalType": "int64",
													"name": "price",
													"type": "int64"
												},
												{
													"internalType": "uint64",
													"name": "conf",
													"type": "uint64"
												},
												{
													"internalType": "int32",
													"name": "expo",
													"type": "int32"
												},
												{
													"internalType": "uint256",
													"name": "publishTime",
													"type": "uint256"
												}
											],
											"internalType": "struct PythStructs.Price",
											"name": "twap",
											"type": "tuple"
										},
										{
											"internalType": "uint32",
											"name": "downSlotsRatio",
											"type": "uint32"
										}
									],
									"internalType": "struct PythStructs.TwapPriceFeed[]",
									"name": "twapPriceFeeds",
									"type": "tuple[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								}
							],
							"name": "updatePriceFeeds",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "updateData",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "priceIds",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint64[]",
									"name": "publishTimes",
									"type": "uint64[]"
								}
							],
							"name": "updatePriceFeedsIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Pyth Data Association",
						"details": "Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.",
						"events": {
							"PriceFeedUpdate(bytes32,uint64,int64,uint64)": {
								"details": "Emitted when the price feed with `id` has received a fresh update.",
								"params": {
									"conf": "Confidence interval of the given price update.",
									"id": "The Pyth Price Feed ID.",
									"price": "Price of the given price update.",
									"publishTime": "Publish time of the given price update."
								}
							},
							"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)": {
								"details": "Emitted when the TWAP price feed with `id` has received a fresh update.",
								"params": {
									"downSlotsRatio": "Down slot ratio of the TWAP.",
									"endTime": "End time of the TWAP.",
									"id": "The Pyth Price Feed ID.",
									"startTime": "Start time of the TWAP.",
									"twapConf": "Confidence interval of the TWAP.",
									"twapPrice": "Price of the TWAP."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getEmaPriceNoOlderThan(bytes32,uint256)": {
								"details": "This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.",
								"returns": {
									"price": "- please read the documentation of PythStructs.Price to understand how to use this safely."
								}
							},
							"getEmaPriceUnsafe(bytes32)": {
								"details": "This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.",
								"returns": {
									"price": "- please read the documentation of PythStructs.Price to understand how to use this safely."
								}
							},
							"getPriceNoOlderThan(bytes32,uint256)": {
								"details": "This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.",
								"returns": {
									"price": "- please read the documentation of PythStructs.Price to understand how to use this safely."
								}
							},
							"getPriceUnsafe(bytes32)": {
								"details": "This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.",
								"returns": {
									"price": "- please read the documentation of PythStructs.Price to understand how to use this safely."
								}
							},
							"getTwapUpdateFee(bytes[])": {
								"params": {
									"updateData": "Array of price update data."
								},
								"returns": {
									"feeAmount": "The required fee in Wei."
								}
							},
							"getUpdateFee(bytes[])": {
								"params": {
									"updateData": "Array of price update data."
								},
								"returns": {
									"feeAmount": "The required fee in Wei."
								}
							},
							"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)": {
								"details": "Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.",
								"params": {
									"maxPublishTime": "maximum acceptable publishTime for the given `priceIds`.",
									"minPublishTime": "minimum acceptable publishTime for the given `priceIds`.",
									"priceIds": "Array of price ids.",
									"updateData": "Array of price update data."
								},
								"returns": {
									"priceFeeds": "Array of the price feeds corresponding to the given `priceIds` (with the same order)."
								}
							},
							"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)": {
								"details": "Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.",
								"params": {
									"maxPublishTime": "maximum acceptable publishTime for the given `priceIds`.",
									"minPublishTime": "minimum acceptable publishTime for the given `priceIds`.",
									"priceIds": "Array of price ids.",
									"updateData": "Array of price update data."
								},
								"returns": {
									"priceFeeds": "Array of the price feeds corresponding to the given `priceIds` (with the same order)."
								}
							},
							"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)": {
								"details": "Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.",
								"params": {
									"maxAllowedPublishTime": "maximum acceptable publishTime for the given `priceIds`.",
									"minAllowedPublishTime": "minimum acceptable publishTime for the given `priceIds`.",
									"priceIds": "Array of price ids.",
									"storeUpdatesIfFresh": "flag for the parse function to",
									"updateData": "Array of price update data."
								},
								"returns": {
									"priceFeeds": "Array of the price feeds corresponding to the given `priceIds` (with the same order)."
								}
							},
							"parseTwapPriceFeedUpdates(bytes[],bytes32[])": {
								"details": "Reverts if: - The transferred fee is not sufficient - The updateData is invalid or malformed - The updateData array does not contain exactly 2 updates - There is no update for any of the given `priceIds` - The time ordering between data points is invalid (start time must be before end time)",
								"params": {
									"priceIds": "Array of price ids to calculate TWAP for",
									"updateData": "Array containing exactly two price updates (start and end points for TWAP calculation)"
								},
								"returns": {
									"twapPriceFeeds": "Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)"
								}
							},
							"updatePriceFeeds(bytes[])": {
								"details": "Reverts if the transferred fee is not sufficient or the updateData is invalid.",
								"params": {
									"updateData": "Array of price update data."
								}
							},
							"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])": {
								"details": "Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.",
								"params": {
									"priceIds": "Array of price ids.",
									"publishTimes": "Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`",
									"updateData": "Array of price update data."
								}
							}
						},
						"title": "Consume prices from the Pyth Network (https://pyth.network/).",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getEmaPriceNoOlderThan(bytes32,uint256)": "711a2e28",
							"getEmaPriceUnsafe(bytes32)": "9474f45b",
							"getPriceNoOlderThan(bytes32,uint256)": "a4ae35e0",
							"getPriceUnsafe(bytes32)": "96834ad3",
							"getTwapUpdateFee(bytes[])": "5f674e35",
							"getUpdateFee(bytes[])": "d47eed45",
							"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)": "4716e9c5",
							"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)": "accca7f9",
							"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)": "3a229d18",
							"parseTwapPriceFeedUpdates(bytes[],bytes32[])": "eb942158",
							"updatePriceFeeds(bytes[])": "ef9e5e28",
							"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])": "b9256d28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getTwapUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"checkUniqueness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkUpdateDataIsMinimal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storeUpdatesIfFresh\",\"type\":\"bool\"}],\"name\":\"parsePriceFeedUpdatesWithConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64[]\",\"name\":\"slots\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"}],\"name\":\"parseTwapPriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"twap\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"internalType\":\"struct PythStructs.TwapPriceFeed[]\",\"name\":\"twapPriceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getTwapUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxAllowedPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minAllowedPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"storeUpdatesIfFresh\":\"flag for the parse function to\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"details\":\"Reverts if: - The transferred fee is not sufficient - The updateData is invalid or malformed - The updateData array does not contain exactly 2 updates - There is no update for any of the given `priceIds` - The time ordering between data points is invalid (start time must be before end time)\",\"params\":{\"priceIds\":\"Array of price ids to calculate TWAP for\",\"updateData\":\"Array containing exactly two price updates (start and end points for TWAP calculation)\"},\"returns\":{\"twapPriceFeeds\":\"Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getTwapUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update a TWAP price.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. This method will eventually allow the caller to determine whether parsed price feeds should update the stored values as well.\"},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"notice\":\"Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`. This method calculates TWAP between two data points by processing the difference in cumulative price values divided by the time period. It requires exactly two updates that contain valid price information for all the requested price IDs. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the updateData array.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getEmaPriceNoOlderThan(bytes32,uint256)": {
								"notice": "Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time."
							},
							"getEmaPriceUnsafe(bytes32)": {
								"notice": "Returns the exponentially-weighted moving average price of a price feed without any sanity checks."
							},
							"getPriceNoOlderThan(bytes32,uint256)": {
								"notice": "Returns the price that is no older than `age` seconds of the current time."
							},
							"getPriceUnsafe(bytes32)": {
								"notice": "Returns the price of a price feed without any sanity checks."
							},
							"getTwapUpdateFee(bytes[])": {
								"notice": "Returns the required fee to update a TWAP price."
							},
							"getUpdateFee(bytes[])": {
								"notice": "Returns the required fee to update an array of price updates."
							},
							"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)": {
								"notice": "Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array."
							},
							"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)": {
								"notice": "Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices."
							},
							"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)": {
								"notice": "Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. This method will eventually allow the caller to determine whether parsed price feeds should update the stored values as well."
							},
							"parseTwapPriceFeedUpdates(bytes[],bytes32[])": {
								"notice": "Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`. This method calculates TWAP between two data points by processing the difference in cumulative price values divided by the time period. It requires exactly two updates that contain valid price information for all the requested price IDs. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the updateData array."
							},
							"updatePriceFeeds(bytes[])": {
								"notice": "Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent."
							},
							"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])": {
								"notice": "Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices."
							}
						},
						"version": 1
					}
				}
			},
			"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
				"IPythEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "publishTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "int64",
									"name": "price",
									"type": "int64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "conf",
									"type": "uint64"
								}
							],
							"name": "PriceFeedUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "int64",
									"name": "twapPrice",
									"type": "int64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "twapConf",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "downSlotsRatio",
									"type": "uint32"
								}
							],
							"name": "TwapPriceFeedUpdate",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This interface can be used for listening to the updates for off-chain and testing purposes.",
						"events": {
							"PriceFeedUpdate(bytes32,uint64,int64,uint64)": {
								"details": "Emitted when the price feed with `id` has received a fresh update.",
								"params": {
									"conf": "Confidence interval of the given price update.",
									"id": "The Pyth Price Feed ID.",
									"price": "Price of the given price update.",
									"publishTime": "Publish time of the given price update."
								}
							},
							"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)": {
								"details": "Emitted when the TWAP price feed with `id` has received a fresh update.",
								"params": {
									"downSlotsRatio": "Down slot ratio of the TWAP.",
									"endTime": "End time of the TWAP.",
									"id": "The Pyth Price Feed ID.",
									"startTime": "Start time of the TWAP.",
									"twapConf": "Confidence interval of the TWAP.",
									"twapPrice": "Price of the TWAP."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "IPythEvents contains the events that Pyth contract emits.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
				"PythStructs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":64:2419  contract PythStructs {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":64:2419  contract PythStructs {... */\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220d6f56c52abcf59c012153738ce46923ed0913314d849e7bc02a4ba25797e10e964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50603e80601a5f395ff3fe60806040525f5ffdfea2646970667358221220d6f56c52abcf59c012153738ce46923ed0913314d849e7bc02a4ba25797e10e964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CREATE2 PUSH13 0x52ABCF59C012153738CE46923E 0xD0 SWAP2 CALLER EQ 0xD8 BLOBHASH SWAPN 0xBC MUL LOG4 0xBA 0x25 PUSH26 0x7E10E964736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "64:2355:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f5ffdfea2646970667358221220d6f56c52abcf59c012153738ce46923ed0913314d849e7bc02a4ba25797e10e964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CREATE2 PUSH13 0x52ABCF59C012153738CE46923E 0xD0 SWAP2 CALLER EQ 0xD8 BLOBHASH SWAPN 0xBC MUL LOG4 0xBA 0x25 PUSH26 0x7E10E964736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "64:2355:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 2419,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6f56c52abcf59c012153738ce46923ed0913314d849e7bc02a4ba25797e10e964736f6c634300081e0033",
									".code": [
										{
											"begin": 64,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 2419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 64,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 2419,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@pythnetwork/pyth-sdk-solidity/IPyth.sol",
								"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol",
								"@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
								"CryptoStockContract/contracts/OracleAggregator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CryptoStockContract/contracts/OracleAggregator.sol": {
				"AggregatorPythView": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pythContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_priceFeedId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getLatestPriceView",
							"outputs": [
								{
									"internalType": "int64",
									"name": "price",
									"type": "int64"
								},
								{
									"internalType": "int32",
									"name": "expo",
									"type": "int32"
								},
								{
									"internalType": "uint256",
									"name": "publishTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pyth",
							"outputs": [
								{
									"internalType": "contract IPyth",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":167:956  contract AggregatorPythView {... */\n  mstore(0x40, 0x80)\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":257:392  constructor(address pythContract, bytes32 _priceFeedId) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":336:348  pythContract */\n  dup2\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":323:327  pyth */\n  0x00\n  0x00\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":323:349  pyth = IPyth(pythContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":373:385  _priceFeedId */\n  dup1\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":359:370  priceFeedId */\n  0x01\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":359:385  priceFeedId = _priceFeedId */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":257:392  constructor(address pythContract, bytes32 _priceFeedId) {... */\n  pop\n  pop\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":167:956  contract AggregatorPythView {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  0x00\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1309:1428   */\ntag_36:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_38\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_39\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"CryptoStockContract/contracts/OracleAggregator.sol\":167:956  contract AggregatorPythView {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":167:956  contract AggregatorPythView {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1999bb9e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x50d5041d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf98d06f0\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":224:250  bytes32 public priceFeedId */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":475:954  function getLatestPriceView() external view returns (int64 price, int32 expo, uint publishTime) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":201:218  IPyth public pyth */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":224:250  bytes32 public priceFeedId */\n    tag_7:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":475:954  function getLatestPriceView() external view returns (int64 price, int32 expo, uint publishTime) {... */\n    tag_11:\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":528:539  int64 price */\n      0x00\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":541:551  int32 expo */\n      0x00\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":553:569  uint publishTime */\n      0x00\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":658:684  PythStructs.Price memory p */\n      0x00\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":687:691  pyth */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":687:706  pyth.getPriceUnsafe */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x96834ad3\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":707:718  priceFeedId */\n      sload(0x01)\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":687:719  pyth.getPriceUnsafe(priceFeedId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_19:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":658:719  PythStructs.Price memory p = pyth.getPriceUnsafe(priceFeedId) */\n      swap1\n      pop\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":743:744  p */\n      dup1\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":743:750  p.price */\n      0x00\n      add\n      mload\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":729:750  price       = p.price */\n      swap4\n      pop\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":792:793  p */\n      dup1\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":792:798  p.expo */\n      0x40\n      add\n      mload\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":778:798  expo        = p.expo */\n      swap3\n      pop\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":844:845  p */\n      dup1\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":844:857  p.publishTime */\n      0x60\n      add\n      mload\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":830:857  publishTime = p.publishTime */\n      swap2\n      pop\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":571:954  {... */\n      pop\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":475:954  function getLatestPriceView() external view returns (int64 price, int32 expo, uint publishTime) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"CryptoStockContract/contracts/OracleAggregator.sol\":201:218  IPyth public pyth */\n    tag_15:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_24:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_25:\n        /* \"#utility.yul\":177:201   */\n      tag_60\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_24\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_62\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_25\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:532   */\n    tag_26:\n        /* \"#utility.yul\":477:484   */\n      0x00\n        /* \"#utility.yul\":520:525   */\n      dup2\n        /* \"#utility.yul\":517:518   */\n      0x07\n        /* \"#utility.yul\":506:526   */\n      signextend\n        /* \"#utility.yul\":495:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:650   */\n    tag_27:\n        /* \"#utility.yul\":621:643   */\n      tag_65\n        /* \"#utility.yul\":637:642   */\n      dup2\n        /* \"#utility.yul\":621:643   */\n      tag_26\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":616:619   */\n      dup3\n        /* \"#utility.yul\":609:644   */\n      mstore\n        /* \"#utility.yul\":538:650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":656:746   */\n    tag_28:\n        /* \"#utility.yul\":691:698   */\n      0x00\n        /* \"#utility.yul\":734:739   */\n      dup2\n        /* \"#utility.yul\":731:732   */\n      0x03\n        /* \"#utility.yul\":720:740   */\n      signextend\n        /* \"#utility.yul\":709:740   */\n      swap1\n      pop\n        /* \"#utility.yul\":656:746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:864   */\n    tag_29:\n        /* \"#utility.yul\":835:857   */\n      tag_68\n        /* \"#utility.yul\":851:856   */\n      dup2\n        /* \"#utility.yul\":835:857   */\n      tag_28\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":830:833   */\n      dup3\n        /* \"#utility.yul\":823:858   */\n      mstore\n        /* \"#utility.yul\":752:864   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":870:947   */\n    tag_30:\n        /* \"#utility.yul\":907:914   */\n      0x00\n        /* \"#utility.yul\":936:941   */\n      dup2\n        /* \"#utility.yul\":925:941   */\n      swap1\n      pop\n        /* \"#utility.yul\":870:947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":953:1071   */\n    tag_31:\n        /* \"#utility.yul\":1040:1064   */\n      tag_71\n        /* \"#utility.yul\":1058:1063   */\n      dup2\n        /* \"#utility.yul\":1040:1064   */\n      tag_30\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1035:1038   */\n      dup3\n        /* \"#utility.yul\":1028:1065   */\n      mstore\n        /* \"#utility.yul\":953:1071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1077:1503   */\n    tag_13:\n        /* \"#utility.yul\":1218:1222   */\n      0x00\n        /* \"#utility.yul\":1256:1258   */\n      0x60\n        /* \"#utility.yul\":1245:1254   */\n      dup3\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"#utility.yul\":1233:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1269:1336   */\n      tag_73\n        /* \"#utility.yul\":1333:1334   */\n      0x00\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1335   */\n      add\n        /* \"#utility.yul\":1309:1315   */\n      dup7\n        /* \"#utility.yul\":1269:1336   */\n      tag_27\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1346:1414   */\n      tag_74\n        /* \"#utility.yul\":1410:1412   */\n      0x20\n        /* \"#utility.yul\":1399:1408   */\n      dup4\n        /* \"#utility.yul\":1395:1413   */\n      add\n        /* \"#utility.yul\":1386:1392   */\n      dup6\n        /* \"#utility.yul\":1346:1414   */\n      tag_29\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1424:1496   */\n      tag_75\n        /* \"#utility.yul\":1492:1494   */\n      0x40\n        /* \"#utility.yul\":1481:1490   */\n      dup4\n        /* \"#utility.yul\":1477:1495   */\n      add\n        /* \"#utility.yul\":1468:1474   */\n      dup5\n        /* \"#utility.yul\":1424:1496   */\n      tag_31\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1077:1503   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1635   */\n    tag_32:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1586:1628   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1579:1584   */\n      dup3\n        /* \"#utility.yul\":1575:1629   */\n      and\n        /* \"#utility.yul\":1564:1629   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1641:1701   */\n    tag_33:\n        /* \"#utility.yul\":1669:1672   */\n      0x00\n        /* \"#utility.yul\":1690:1695   */\n      dup2\n        /* \"#utility.yul\":1683:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1641:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1849   */\n    tag_34:\n        /* \"#utility.yul\":1757:1766   */\n      0x00\n        /* \"#utility.yul\":1790:1843   */\n      tag_79\n        /* \"#utility.yul\":1808:1842   */\n      tag_80\n        /* \"#utility.yul\":1817:1841   */\n      tag_81\n        /* \"#utility.yul\":1835:1840   */\n      dup5\n        /* \"#utility.yul\":1817:1841   */\n      tag_32\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1808:1842   */\n      tag_33\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1790:1843   */\n      tag_32\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1777:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1707:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1981   */\n    tag_35:\n        /* \"#utility.yul\":1905:1914   */\n      0x00\n        /* \"#utility.yul\":1938:1975   */\n      tag_83\n        /* \"#utility.yul\":1969:1974   */\n      dup3\n        /* \"#utility.yul\":1938:1975   */\n      tag_34\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1925:1975   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1987:2126   */\n    tag_36:\n        /* \"#utility.yul\":2050:2059   */\n      0x00\n        /* \"#utility.yul\":2083:2120   */\n      tag_85\n        /* \"#utility.yul\":2114:2119   */\n      dup3\n        /* \"#utility.yul\":2083:2120   */\n      tag_35\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2070:2120   */\n      swap1\n      pop\n        /* \"#utility.yul\":1987:2126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2132:2289   */\n    tag_37:\n        /* \"#utility.yul\":2232:2282   */\n      tag_87\n        /* \"#utility.yul\":2276:2281   */\n      dup2\n        /* \"#utility.yul\":2232:2282   */\n      tag_36\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2227:2230   */\n      dup3\n        /* \"#utility.yul\":2220:2283   */\n      mstore\n        /* \"#utility.yul\":2132:2289   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2295:2543   */\n    tag_17:\n        /* \"#utility.yul\":2401:2405   */\n      0x00\n        /* \"#utility.yul\":2439:2441   */\n      0x20\n        /* \"#utility.yul\":2428:2437   */\n      dup3\n        /* \"#utility.yul\":2424:2442   */\n      add\n        /* \"#utility.yul\":2416:2442   */\n      swap1\n      pop\n        /* \"#utility.yul\":2452:2536   */\n      tag_89\n        /* \"#utility.yul\":2533:2534   */\n      0x00\n        /* \"#utility.yul\":2522:2531   */\n      dup4\n        /* \"#utility.yul\":2518:2535   */\n      add\n        /* \"#utility.yul\":2509:2515   */\n      dup5\n        /* \"#utility.yul\":2452:2536   */\n      tag_37\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2295:2543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2624   */\n    tag_38:\n        /* \"#utility.yul\":2582:2588   */\n      0x00\n        /* \"#utility.yul\":2615:2617   */\n      0x40\n        /* \"#utility.yul\":2609:2618   */\n      mload\n        /* \"#utility.yul\":2599:2618   */\n      swap1\n      pop\n        /* \"#utility.yul\":2549:2624   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2630:2747   */\n    tag_39:\n        /* \"#utility.yul\":2739:2740   */\n      0x00\n        /* \"#utility.yul\":2736:2737   */\n      0x00\n        /* \"#utility.yul\":2729:2741   */\n      revert\n        /* \"#utility.yul\":2876:2993   */\n    tag_41:\n        /* \"#utility.yul\":2985:2986   */\n      0x00\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2975:2987   */\n      revert\n        /* \"#utility.yul\":2999:3101   */\n    tag_42:\n        /* \"#utility.yul\":3040:3046   */\n      0x00\n        /* \"#utility.yul\":3091:3093   */\n      0x1f\n        /* \"#utility.yul\":3087:3094   */\n      not\n        /* \"#utility.yul\":3082:3084   */\n      0x1f\n        /* \"#utility.yul\":3075:3080   */\n      dup4\n        /* \"#utility.yul\":3071:3085   */\n      add\n        /* \"#utility.yul\":3067:3095   */\n      and\n        /* \"#utility.yul\":3057:3095   */\n      swap1\n      pop\n        /* \"#utility.yul\":2999:3101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3107:3287   */\n    tag_43:\n        /* \"#utility.yul\":3155:3232   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3152:3153   */\n      0x00\n        /* \"#utility.yul\":3145:3233   */\n      mstore\n        /* \"#utility.yul\":3252:3256   */\n      0x41\n        /* \"#utility.yul\":3249:3250   */\n      0x04\n        /* \"#utility.yul\":3242:3257   */\n      mstore\n        /* \"#utility.yul\":3276:3280   */\n      0x24\n        /* \"#utility.yul\":3273:3274   */\n      0x00\n        /* \"#utility.yul\":3266:3281   */\n      revert\n        /* \"#utility.yul\":3293:3574   */\n    tag_44:\n        /* \"#utility.yul\":3376:3403   */\n      tag_97\n        /* \"#utility.yul\":3398:3402   */\n      dup3\n        /* \"#utility.yul\":3376:3403   */\n      tag_42\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3368:3374   */\n      dup2\n        /* \"#utility.yul\":3364:3404   */\n      add\n        /* \"#utility.yul\":3506:3512   */\n      dup2\n        /* \"#utility.yul\":3494:3504   */\n      dup2\n        /* \"#utility.yul\":3491:3513   */\n      lt\n        /* \"#utility.yul\":3470:3488   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3458:3468   */\n      dup3\n        /* \"#utility.yul\":3455:3489   */\n      gt\n        /* \"#utility.yul\":3452:3514   */\n      or\n        /* \"#utility.yul\":3449:3537   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3517:3535   */\n      tag_99\n      tag_43\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3449:3537   */\n    tag_98:\n        /* \"#utility.yul\":3557:3567   */\n      dup1\n        /* \"#utility.yul\":3553:3555   */\n      0x40\n        /* \"#utility.yul\":3546:3568   */\n      mstore\n        /* \"#utility.yul\":3336:3574   */\n      pop\n        /* \"#utility.yul\":3293:3574   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3580:3709   */\n    tag_45:\n        /* \"#utility.yul\":3614:3620   */\n      0x00\n        /* \"#utility.yul\":3641:3661   */\n      tag_101\n      tag_38\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3631:3661   */\n      swap1\n      pop\n        /* \"#utility.yul\":3670:3703   */\n      tag_102\n        /* \"#utility.yul\":3698:3702   */\n      dup3\n        /* \"#utility.yul\":3690:3696   */\n      dup3\n        /* \"#utility.yul\":3670:3703   */\n      tag_44\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3580:3709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:3956   */\n    tag_47:\n        /* \"#utility.yul\":3909:3931   */\n      tag_105\n        /* \"#utility.yul\":3925:3930   */\n      dup2\n        /* \"#utility.yul\":3909:3931   */\n      tag_26\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3902:3907   */\n      dup2\n        /* \"#utility.yul\":3899:3932   */\n      eq\n        /* \"#utility.yul\":3889:3950   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":3946:3947   */\n      0x00\n        /* \"#utility.yul\":3943:3944   */\n      0x00\n        /* \"#utility.yul\":3936:3948   */\n      revert\n        /* \"#utility.yul\":3889:3950   */\n    tag_106:\n        /* \"#utility.yul\":3838:3956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3962:4101   */\n    tag_48:\n        /* \"#utility.yul\":4017:4022   */\n      0x00\n        /* \"#utility.yul\":4048:4054   */\n      dup2\n        /* \"#utility.yul\":4042:4055   */\n      mload\n        /* \"#utility.yul\":4033:4055   */\n      swap1\n      pop\n        /* \"#utility.yul\":4064:4095   */\n      tag_108\n        /* \"#utility.yul\":4089:4094   */\n      dup2\n        /* \"#utility.yul\":4064:4095   */\n      tag_47\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3962:4101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4208   */\n    tag_49:\n        /* \"#utility.yul\":4143:4150   */\n      0x00\n        /* \"#utility.yul\":4183:4201   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4176:4181   */\n      dup3\n        /* \"#utility.yul\":4172:4202   */\n      and\n        /* \"#utility.yul\":4161:4202   */\n      swap1\n      pop\n        /* \"#utility.yul\":4107:4208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4214:4334   */\n    tag_50:\n        /* \"#utility.yul\":4286:4309   */\n      tag_111\n        /* \"#utility.yul\":4303:4308   */\n      dup2\n        /* \"#utility.yul\":4286:4309   */\n      tag_49\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4279:4284   */\n      dup2\n        /* \"#utility.yul\":4276:4310   */\n      eq\n        /* \"#utility.yul\":4266:4328   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":4324:4325   */\n      0x00\n        /* \"#utility.yul\":4321:4322   */\n      0x00\n        /* \"#utility.yul\":4314:4326   */\n      revert\n        /* \"#utility.yul\":4266:4328   */\n    tag_112:\n        /* \"#utility.yul\":4214:4334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4340:4481   */\n    tag_51:\n        /* \"#utility.yul\":4396:4401   */\n      0x00\n        /* \"#utility.yul\":4427:4433   */\n      dup2\n        /* \"#utility.yul\":4421:4434   */\n      mload\n        /* \"#utility.yul\":4412:4434   */\n      swap1\n      pop\n        /* \"#utility.yul\":4443:4475   */\n      tag_114\n        /* \"#utility.yul\":4469:4474   */\n      dup2\n        /* \"#utility.yul\":4443:4475   */\n      tag_50\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4340:4481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4487:4605   */\n    tag_52:\n        /* \"#utility.yul\":4558:4580   */\n      tag_116\n        /* \"#utility.yul\":4574:4579   */\n      dup2\n        /* \"#utility.yul\":4558:4580   */\n      tag_28\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4551:4556   */\n      dup2\n        /* \"#utility.yul\":4548:4581   */\n      eq\n        /* \"#utility.yul\":4538:4599   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4595:4596   */\n      0x00\n        /* \"#utility.yul\":4592:4593   */\n      0x00\n        /* \"#utility.yul\":4585:4597   */\n      revert\n        /* \"#utility.yul\":4538:4599   */\n    tag_117:\n        /* \"#utility.yul\":4487:4605   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4611:4750   */\n    tag_53:\n        /* \"#utility.yul\":4666:4671   */\n      0x00\n        /* \"#utility.yul\":4697:4703   */\n      dup2\n        /* \"#utility.yul\":4691:4704   */\n      mload\n        /* \"#utility.yul\":4682:4704   */\n      swap1\n      pop\n        /* \"#utility.yul\":4713:4744   */\n      tag_119\n        /* \"#utility.yul\":4738:4743   */\n      dup2\n        /* \"#utility.yul\":4713:4744   */\n      tag_52\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4611:4750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4756:4878   */\n    tag_54:\n        /* \"#utility.yul\":4829:4853   */\n      tag_121\n        /* \"#utility.yul\":4847:4852   */\n      dup2\n        /* \"#utility.yul\":4829:4853   */\n      tag_30\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4822:4827   */\n      dup2\n        /* \"#utility.yul\":4819:4854   */\n      eq\n        /* \"#utility.yul\":4809:4872   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":4868:4869   */\n      0x00\n        /* \"#utility.yul\":4865:4866   */\n      0x00\n        /* \"#utility.yul\":4858:4870   */\n      revert\n        /* \"#utility.yul\":4809:4872   */\n    tag_122:\n        /* \"#utility.yul\":4756:4878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4884:5027   */\n    tag_55:\n        /* \"#utility.yul\":4941:4946   */\n      0x00\n        /* \"#utility.yul\":4972:4978   */\n      dup2\n        /* \"#utility.yul\":4966:4979   */\n      mload\n        /* \"#utility.yul\":4957:4979   */\n      swap1\n      pop\n        /* \"#utility.yul\":4988:5021   */\n      tag_124\n        /* \"#utility.yul\":5015:5020   */\n      dup2\n        /* \"#utility.yul\":4988:5021   */\n      tag_54\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4884:5027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5065:6016   */\n    tag_56:\n        /* \"#utility.yul\":5147:5152   */\n      0x00\n        /* \"#utility.yul\":5191:5195   */\n      0x80\n        /* \"#utility.yul\":5179:5188   */\n      dup3\n        /* \"#utility.yul\":5174:5177   */\n      dup5\n        /* \"#utility.yul\":5170:5189   */\n      sub\n        /* \"#utility.yul\":5166:5196   */\n      slt\n        /* \"#utility.yul\":5163:5280   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":5199:5278   */\n      tag_127\n      tag_41\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5163:5280   */\n    tag_126:\n        /* \"#utility.yul\":5298:5319   */\n      tag_128\n        /* \"#utility.yul\":5314:5318   */\n      0x80\n        /* \"#utility.yul\":5298:5319   */\n      tag_45\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5289:5319   */\n      swap1\n      pop\n        /* \"#utility.yul\":5379:5380   */\n      0x00\n        /* \"#utility.yul\":5419:5477   */\n      tag_129\n        /* \"#utility.yul\":5473:5476   */\n      dup5\n        /* \"#utility.yul\":5464:5470   */\n      dup3\n        /* \"#utility.yul\":5453:5462   */\n      dup6\n        /* \"#utility.yul\":5449:5471   */\n      add\n        /* \"#utility.yul\":5419:5477   */\n      tag_48\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5412:5416   */\n      0x00\n        /* \"#utility.yul\":5405:5410   */\n      dup4\n        /* \"#utility.yul\":5401:5417   */\n      add\n        /* \"#utility.yul\":5394:5478   */\n      mstore\n        /* \"#utility.yul\":5329:5489   */\n      pop\n        /* \"#utility.yul\":5548:5550   */\n      0x20\n        /* \"#utility.yul\":5589:5648   */\n      tag_130\n        /* \"#utility.yul\":5644:5647   */\n      dup5\n        /* \"#utility.yul\":5635:5641   */\n      dup3\n        /* \"#utility.yul\":5624:5633   */\n      dup6\n        /* \"#utility.yul\":5620:5642   */\n      add\n        /* \"#utility.yul\":5589:5648   */\n      tag_51\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5582:5586   */\n      0x20\n        /* \"#utility.yul\":5575:5580   */\n      dup4\n        /* \"#utility.yul\":5571:5587   */\n      add\n        /* \"#utility.yul\":5564:5649   */\n      mstore\n        /* \"#utility.yul\":5499:5660   */\n      pop\n        /* \"#utility.yul\":5719:5721   */\n      0x40\n        /* \"#utility.yul\":5760:5818   */\n      tag_131\n        /* \"#utility.yul\":5814:5817   */\n      dup5\n        /* \"#utility.yul\":5805:5811   */\n      dup3\n        /* \"#utility.yul\":5794:5803   */\n      dup6\n        /* \"#utility.yul\":5790:5812   */\n      add\n        /* \"#utility.yul\":5760:5818   */\n      tag_53\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5753:5757   */\n      0x40\n        /* \"#utility.yul\":5746:5751   */\n      dup4\n        /* \"#utility.yul\":5742:5758   */\n      add\n        /* \"#utility.yul\":5735:5819   */\n      mstore\n        /* \"#utility.yul\":5670:5830   */\n      pop\n        /* \"#utility.yul\":5896:5898   */\n      0x60\n        /* \"#utility.yul\":5937:5997   */\n      tag_132\n        /* \"#utility.yul\":5993:5996   */\n      dup5\n        /* \"#utility.yul\":5984:5990   */\n      dup3\n        /* \"#utility.yul\":5973:5982   */\n      dup6\n        /* \"#utility.yul\":5969:5991   */\n      add\n        /* \"#utility.yul\":5937:5997   */\n      tag_55\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":5930:5934   */\n      0x60\n        /* \"#utility.yul\":5923:5928   */\n      dup4\n        /* \"#utility.yul\":5919:5935   */\n      add\n        /* \"#utility.yul\":5912:5998   */\n      mstore\n        /* \"#utility.yul\":5840:6009   */\n      pop\n        /* \"#utility.yul\":5065:6016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6022:6418   */\n    tag_23:\n        /* \"#utility.yul\":6114:6120   */\n      0x00\n        /* \"#utility.yul\":6163:6166   */\n      0x80\n        /* \"#utility.yul\":6151:6160   */\n      dup3\n        /* \"#utility.yul\":6142:6149   */\n      dup5\n        /* \"#utility.yul\":6138:6161   */\n      sub\n        /* \"#utility.yul\":6134:6167   */\n      slt\n        /* \"#utility.yul\":6131:6251   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":6170:6249   */\n      tag_135\n      tag_39\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6131:6251   */\n    tag_134:\n        /* \"#utility.yul\":6290:6291   */\n      0x00\n        /* \"#utility.yul\":6315:6401   */\n      tag_136\n        /* \"#utility.yul\":6393:6400   */\n      dup5\n        /* \"#utility.yul\":6384:6390   */\n      dup3\n        /* \"#utility.yul\":6373:6382   */\n      dup6\n        /* \"#utility.yul\":6369:6391   */\n      add\n        /* \"#utility.yul\":6315:6401   */\n      tag_56\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6305:6401   */\n      swap2\n      pop\n        /* \"#utility.yul\":6261:6411   */\n      pop\n        /* \"#utility.yul\":6022:6418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b0205702a49ae751aae7bb8a0e61bfae023fc1ba6230db4f2db5baa824e42f9a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_267": {
									"entryPoint": null,
									"id": 267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes32_fromMemory": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1715:4",
										"nodeType": "YulBlock",
										"src": "0:1715:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "890:32:4",
													"nodeType": "YulBlock",
													"src": "890:32:4",
													"statements": [
														{
															"nativeSrc": "900:16:4",
															"nodeType": "YulAssignment",
															"src": "900:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:4",
																"nodeType": "YulIdentifier",
																"src": "911:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "845:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:4",
														"nodeType": "YulTypedName",
														"src": "872:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:4",
														"nodeType": "YulTypedName",
														"src": "882:7:4",
														"type": ""
													}
												],
												"src": "845:77:4"
											},
											{
												"body": {
													"nativeSrc": "971:79:4",
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:4",
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nativeSrc": "1030:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nativeSrc": "1030:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1001:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nativeSrc": "1001:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nativeSrc": "991:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nativeSrc": "984:43:4",
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nativeSrc": "981:63:4",
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "928:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:4",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nativeSrc": "1119:80:4",
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nativeSrc": "1129:22:4",
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nativeSrc": "1138:13:4",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1160:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nativeSrc": "1160:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nativeSrc": "1160:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "1056:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:4",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:4",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:4",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nativeSrc": "1299:413:4",
													"nodeType": "YulBlock",
													"src": "1299:413:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:4",
																"nodeType": "YulBlock",
																"src": "1345:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:4"
																			},
																			"nativeSrc": "1347:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:4"
																		},
																		"nativeSrc": "1347:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:4"
																		},
																		"nativeSrc": "1316:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:4"
																},
																"nativeSrc": "1312:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:4"
															},
															"nativeSrc": "1309:119:4",
															"nodeType": "YulIf",
															"src": "1309:119:4"
														},
														{
															"nativeSrc": "1438:128:4",
															"nodeType": "YulBlock",
															"src": "1438:128:4",
															"statements": [
																{
																	"nativeSrc": "1453:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:4"
																				},
																				"nativeSrc": "1524:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:4"
																		},
																		"nativeSrc": "1492:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:4",
															"nodeType": "YulBlock",
															"src": "1576:129:4",
															"statements": [
																{
																	"nativeSrc": "1591:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:4"
																				},
																				"nativeSrc": "1663:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "1631:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:4"
																		},
																		"nativeSrc": "1631:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32_fromMemory",
												"nativeSrc": "1205:507:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:4",
														"nodeType": "YulTypedName",
														"src": "1261:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:4",
														"nodeType": "YulTypedName",
														"src": "1272:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:4",
														"nodeType": "YulTypedName",
														"src": "1284:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:4",
														"nodeType": "YulTypedName",
														"src": "1292:6:4",
														"type": ""
													}
												],
												"src": "1205:507:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161064e38038061064e8339818101604052810190610031919061010f565b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550505061014d565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100ab82610082565b9050919050565b6100bb816100a1565b81146100c5575f5ffd5b50565b5f815190506100d6816100b2565b92915050565b5f819050919050565b6100ee816100dc565b81146100f8575f5ffd5b50565b5f81519050610109816100e5565b92915050565b5f5f604083850312156101255761012461007e565b5b5f610132858286016100c8565b9250506020610143858286016100fb565b9150509250929050565b6104f48061015a5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80631999bb9e1461004357806350d5041d14610061578063f98d06f014610081575b5f5ffd5b61004b61009f565b604051610058919061019b565b60405180910390f35b6100696100a5565b60405161007893929190610202565b60405180910390f35b61008961015f565b60405161009691906102b1565b60405180910390f35b60015481565b5f5f5f5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396834ad36001546040518263ffffffff1660e01b8152600401610104919061019b565b608060405180830381865afa15801561011f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101439190610493565b9050805f01519350806040015192508060600151915050909192565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f819050919050565b61019581610183565b82525050565b5f6020820190506101ae5f83018461018c565b92915050565b5f8160070b9050919050565b6101c9816101b4565b82525050565b5f8160030b9050919050565b6101e4816101cf565b82525050565b5f819050919050565b6101fc816101ea565b82525050565b5f6060820190506102155f8301866101c0565b61022260208301856101db565b61022f60408301846101f3565b949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61027961027461026f84610237565b610256565b610237565b9050919050565b5f61028a8261025f565b9050919050565b5f61029b82610280565b9050919050565b6102ab81610291565b82525050565b5f6020820190506102c45f8301846102a2565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610321826102db565b810181811067ffffffffffffffff821117156103405761033f6102eb565b5b80604052505050565b5f6103526102ca565b905061035e8282610318565b919050565b61036c816101b4565b8114610376575f5ffd5b50565b5f8151905061038781610363565b92915050565b5f67ffffffffffffffff82169050919050565b6103a98161038d565b81146103b3575f5ffd5b50565b5f815190506103c4816103a0565b92915050565b6103d3816101cf565b81146103dd575f5ffd5b50565b5f815190506103ee816103ca565b92915050565b6103fd816101ea565b8114610407575f5ffd5b50565b5f81519050610418816103f4565b92915050565b5f60808284031215610433576104326102d7565b5b61043d6080610349565b90505f61044c84828501610379565b5f83015250602061045f848285016103b6565b6020830152506040610473848285016103e0565b60408301525060606104878482850161040a565b60608301525092915050565b5f608082840312156104a8576104a76102d3565b5b5f6104b58482850161041e565b9150509291505056fea2646970667358221220b0205702a49ae751aae7bb8a0e61bfae023fc1ba6230db4f2db5baa824e42f9a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x64E CODESIZE SUB DUP1 PUSH2 0x64E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x10F JUMP JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x14D JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB DUP3 PUSH2 0x82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB DUP2 PUSH2 0xA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD6 DUP2 PUSH2 0xB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE DUP2 PUSH2 0xDC JUMP JUMPDEST DUP2 EQ PUSH2 0xF8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x109 DUP2 PUSH2 0xE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH2 0x124 PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x132 DUP6 DUP3 DUP7 ADD PUSH2 0xC8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143 DUP6 DUP3 DUP7 ADD PUSH2 0xFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F4 DUP1 PUSH2 0x15A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1999BB9E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x50D5041D EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x96834AD3 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x493 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD MLOAD SWAP4 POP DUP1 PUSH1 0x40 ADD MLOAD SWAP3 POP DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195 DUP2 PUSH2 0x183 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE PUSH0 DUP4 ADD DUP5 PUSH2 0x18C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x1B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x3 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x1CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x215 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x222 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x22F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x279 PUSH2 0x274 PUSH2 0x26F DUP5 PUSH2 0x237 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28A DUP3 PUSH2 0x25F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29B DUP3 PUSH2 0x280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AB DUP2 PUSH2 0x291 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x321 DUP3 PUSH2 0x2DB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0x2EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x352 PUSH2 0x2CA JUMP JUMPDEST SWAP1 POP PUSH2 0x35E DUP3 DUP3 PUSH2 0x318 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH2 0x1B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x376 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x38D JUMP JUMPDEST DUP2 EQ PUSH2 0x3B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C4 DUP2 PUSH2 0x3A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D3 DUP2 PUSH2 0x1CF JUMP JUMPDEST DUP2 EQ PUSH2 0x3DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EE DUP2 PUSH2 0x3CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FD DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP2 EQ PUSH2 0x407 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x418 DUP2 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x2D7 JUMP JUMPDEST JUMPDEST PUSH2 0x43D PUSH1 0x80 PUSH2 0x349 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x44C DUP5 DUP3 DUP6 ADD PUSH2 0x379 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x45F DUP5 DUP3 DUP6 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x473 DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x487 DUP5 DUP3 DUP6 ADD PUSH2 0x40A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A7 PUSH2 0x2D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B5 DUP5 DUP3 DUP6 ADD PUSH2 0x41E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 KECCAK256 JUMPI MUL LOG4 SWAP11 SWAPN 0x51 0xAA SWAPN 0xBB DUP11 0xE PUSH2 0xBFAE MUL EXTCODEHASH 0xC1 0xBA PUSH3 0x30DB4F 0x2D 0xB5 0xBA 0xA8 0x24 RETF 0x2F SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:789:3:-:0;;;257:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;336:12;323:4;;:26;;;;;;;;;;;;;;;;;;373:12;359:11;:26;;;;257:135;;167:789;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;167:789:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getLatestPriceView_303": {
									"entryPoint": 165,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@priceFeedId_249": {
									"entryPoint": 159,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pyth_247": {
									"entryPoint": 351,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_int32_fromMemory": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int64_fromMemory": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_Price_$203_memory_ptr_fromMemory": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Price_$203_memory_ptr_fromMemory": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IPyth_$162_to_t_address_fromStack": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int32_to_t_int32_fromStack": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int64_to_t_int64_fromStack": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPyth_$162__to_t_address__fromStack_reversed": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int64_t_int32_t_uint256__to_t_int64_t_int32_t_uint256__fromStack_reversed": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int32": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int64": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IPyth_$162_to_t_address": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_int32": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int64": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6421:4",
										"nodeType": "YulBlock",
										"src": "0:6421:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:4",
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nativeSrc": "62:16:4",
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:4",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nativeSrc": "155:53:4",
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "177:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nativeSrc": "177:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nativeSrc": "165:37:4",
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nativeSrc": "165:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "90:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:4",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:4",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nativeSrc": "312:124:4",
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nativeSrc": "322:26:4",
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:4",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nativeSrc": "330:18:4",
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:4",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nativeSrc": "411:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "358:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nativeSrc": "358:71:4",
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nativeSrc": "358:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "214:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:4",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:4",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:4",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nativeSrc": "485:47:4",
													"nodeType": "YulBlock",
													"src": "485:47:4",
													"statements": [
														{
															"nativeSrc": "495:31:4",
															"nodeType": "YulAssignment",
															"src": "495:31:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "517:1:4",
																		"nodeType": "YulLiteral",
																		"src": "517:1:4",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "520:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "520:5:4"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "506:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "506:10:4"
																},
																"nativeSrc": "506:20:4",
																"nodeType": "YulFunctionCall",
																"src": "506:20:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "495:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "495:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int64",
												"nativeSrc": "442:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "467:5:4",
														"nodeType": "YulTypedName",
														"src": "467:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "477:7:4",
														"nodeType": "YulTypedName",
														"src": "477:7:4",
														"type": ""
													}
												],
												"src": "442:90:4"
											},
											{
												"body": {
													"nativeSrc": "599:51:4",
													"nodeType": "YulBlock",
													"src": "599:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "616:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "616:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "637:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "637:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int64",
																			"nativeSrc": "621:15:4",
																			"nodeType": "YulIdentifier",
																			"src": "621:15:4"
																		},
																		"nativeSrc": "621:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "621:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "609:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:4"
																},
																"nativeSrc": "609:35:4",
																"nodeType": "YulFunctionCall",
																"src": "609:35:4"
															},
															"nativeSrc": "609:35:4",
															"nodeType": "YulExpressionStatement",
															"src": "609:35:4"
														}
													]
												},
												"name": "abi_encode_t_int64_to_t_int64_fromStack",
												"nativeSrc": "538:112:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "587:5:4",
														"nodeType": "YulTypedName",
														"src": "587:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "594:3:4",
														"nodeType": "YulTypedName",
														"src": "594:3:4",
														"type": ""
													}
												],
												"src": "538:112:4"
											},
											{
												"body": {
													"nativeSrc": "699:47:4",
													"nodeType": "YulBlock",
													"src": "699:47:4",
													"statements": [
														{
															"nativeSrc": "709:31:4",
															"nodeType": "YulAssignment",
															"src": "709:31:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:4",
																		"nodeType": "YulLiteral",
																		"src": "731:1:4",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "734:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "734:5:4"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "720:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "720:10:4"
																},
																"nativeSrc": "720:20:4",
																"nodeType": "YulFunctionCall",
																"src": "720:20:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "709:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "709:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int32",
												"nativeSrc": "656:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "681:5:4",
														"nodeType": "YulTypedName",
														"src": "681:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "691:7:4",
														"nodeType": "YulTypedName",
														"src": "691:7:4",
														"type": ""
													}
												],
												"src": "656:90:4"
											},
											{
												"body": {
													"nativeSrc": "813:51:4",
													"nodeType": "YulBlock",
													"src": "813:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "830:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "830:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "851:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "851:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int32",
																			"nativeSrc": "835:15:4",
																			"nodeType": "YulIdentifier",
																			"src": "835:15:4"
																		},
																		"nativeSrc": "835:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "835:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:4"
																},
																"nativeSrc": "823:35:4",
																"nodeType": "YulFunctionCall",
																"src": "823:35:4"
															},
															"nativeSrc": "823:35:4",
															"nodeType": "YulExpressionStatement",
															"src": "823:35:4"
														}
													]
												},
												"name": "abi_encode_t_int32_to_t_int32_fromStack",
												"nativeSrc": "752:112:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "801:5:4",
														"nodeType": "YulTypedName",
														"src": "801:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "808:3:4",
														"nodeType": "YulTypedName",
														"src": "808:3:4",
														"type": ""
													}
												],
												"src": "752:112:4"
											},
											{
												"body": {
													"nativeSrc": "915:32:4",
													"nodeType": "YulBlock",
													"src": "915:32:4",
													"statements": [
														{
															"nativeSrc": "925:16:4",
															"nodeType": "YulAssignment",
															"src": "925:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "936:5:4",
																"nodeType": "YulIdentifier",
																"src": "936:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "925:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "925:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "870:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "897:5:4",
														"nodeType": "YulTypedName",
														"src": "897:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "907:7:4",
														"nodeType": "YulTypedName",
														"src": "907:7:4",
														"type": ""
													}
												],
												"src": "870:77:4"
											},
											{
												"body": {
													"nativeSrc": "1018:53:4",
													"nodeType": "YulBlock",
													"src": "1018:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1035:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1035:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1058:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1058:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1040:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1040:17:4"
																		},
																		"nativeSrc": "1040:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1040:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:4"
																},
																"nativeSrc": "1028:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1028:37:4"
															},
															"nativeSrc": "1028:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1028:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "953:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1006:5:4",
														"nodeType": "YulTypedName",
														"src": "1006:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1013:3:4",
														"nodeType": "YulTypedName",
														"src": "1013:3:4",
														"type": ""
													}
												],
												"src": "953:118:4"
											},
											{
												"body": {
													"nativeSrc": "1223:280:4",
													"nodeType": "YulBlock",
													"src": "1223:280:4",
													"statements": [
														{
															"nativeSrc": "1233:26:4",
															"nodeType": "YulAssignment",
															"src": "1233:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:4"
																},
																"nativeSrc": "1241:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1309:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1309:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1333:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:4"
																		},
																		"nativeSrc": "1318:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int64_to_t_int64_fromStack",
																	"nativeSrc": "1269:39:4",
																	"nodeType": "YulIdentifier",
																	"src": "1269:39:4"
																},
																"nativeSrc": "1269:67:4",
																"nodeType": "YulFunctionCall",
																"src": "1269:67:4"
															},
															"nativeSrc": "1269:67:4",
															"nodeType": "YulExpressionStatement",
															"src": "1269:67:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1386:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1386:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1399:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1399:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1410:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1410:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1395:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:4"
																		},
																		"nativeSrc": "1395:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1395:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int32_to_t_int32_fromStack",
																	"nativeSrc": "1346:39:4",
																	"nodeType": "YulIdentifier",
																	"src": "1346:39:4"
																},
																"nativeSrc": "1346:68:4",
																"nodeType": "YulFunctionCall",
																"src": "1346:68:4"
															},
															"nativeSrc": "1346:68:4",
															"nodeType": "YulExpressionStatement",
															"src": "1346:68:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1468:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1468:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1481:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1481:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1492:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1492:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1477:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:4"
																		},
																		"nativeSrc": "1477:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1477:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1424:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1424:43:4"
																},
																"nativeSrc": "1424:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1424:72:4"
															},
															"nativeSrc": "1424:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1424:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_int64_t_int32_t_uint256__to_t_int64_t_int32_t_uint256__fromStack_reversed",
												"nativeSrc": "1077:426:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1179:9:4",
														"nodeType": "YulTypedName",
														"src": "1179:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1191:6:4",
														"nodeType": "YulTypedName",
														"src": "1191:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1199:6:4",
														"nodeType": "YulTypedName",
														"src": "1199:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1207:6:4",
														"nodeType": "YulTypedName",
														"src": "1207:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1218:4:4",
														"nodeType": "YulTypedName",
														"src": "1218:4:4",
														"type": ""
													}
												],
												"src": "1077:426:4"
											},
											{
												"body": {
													"nativeSrc": "1554:81:4",
													"nodeType": "YulBlock",
													"src": "1554:81:4",
													"statements": [
														{
															"nativeSrc": "1564:65:4",
															"nodeType": "YulAssignment",
															"src": "1564:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1579:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1579:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1586:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1586:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1575:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1575:3:4"
																},
																"nativeSrc": "1575:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1575:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1509:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:4",
														"nodeType": "YulTypedName",
														"src": "1536:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:4",
														"nodeType": "YulTypedName",
														"src": "1546:7:4",
														"type": ""
													}
												],
												"src": "1509:126:4"
											},
											{
												"body": {
													"nativeSrc": "1673:28:4",
													"nodeType": "YulBlock",
													"src": "1673:28:4",
													"statements": [
														{
															"nativeSrc": "1683:12:4",
															"nodeType": "YulAssignment",
															"src": "1683:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "1690:5:4",
																"nodeType": "YulIdentifier",
																"src": "1690:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1683:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1683:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1641:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1659:5:4",
														"nodeType": "YulTypedName",
														"src": "1659:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1669:3:4",
														"nodeType": "YulTypedName",
														"src": "1669:3:4",
														"type": ""
													}
												],
												"src": "1641:60:4"
											},
											{
												"body": {
													"nativeSrc": "1767:82:4",
													"nodeType": "YulBlock",
													"src": "1767:82:4",
													"statements": [
														{
															"nativeSrc": "1777:66:4",
															"nodeType": "YulAssignment",
															"src": "1777:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1835:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1835:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1817:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1817:17:4"
																				},
																				"nativeSrc": "1817:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1817:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1808:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "1808:8:4"
																		},
																		"nativeSrc": "1808:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1790:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1790:17:4"
																},
																"nativeSrc": "1790:53:4",
																"nodeType": "YulFunctionCall",
																"src": "1790:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1777:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1777:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1707:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1747:5:4",
														"nodeType": "YulTypedName",
														"src": "1747:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1757:9:4",
														"nodeType": "YulTypedName",
														"src": "1757:9:4",
														"type": ""
													}
												],
												"src": "1707:142:4"
											},
											{
												"body": {
													"nativeSrc": "1915:66:4",
													"nodeType": "YulBlock",
													"src": "1915:66:4",
													"statements": [
														{
															"nativeSrc": "1925:50:4",
															"nodeType": "YulAssignment",
															"src": "1925:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1969:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1969:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1938:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "1938:30:4"
																},
																"nativeSrc": "1938:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1938:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1925:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1925:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1855:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1895:5:4",
														"nodeType": "YulTypedName",
														"src": "1895:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1905:9:4",
														"nodeType": "YulTypedName",
														"src": "1905:9:4",
														"type": ""
													}
												],
												"src": "1855:126:4"
											},
											{
												"body": {
													"nativeSrc": "2060:66:4",
													"nodeType": "YulBlock",
													"src": "2060:66:4",
													"statements": [
														{
															"nativeSrc": "2070:50:4",
															"nodeType": "YulAssignment",
															"src": "2070:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2114:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2114:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2083:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2083:30:4"
																},
																"nativeSrc": "2083:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2083:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2070:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2070:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IPyth_$162_to_t_address",
												"nativeSrc": "1987:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2040:5:4",
														"nodeType": "YulTypedName",
														"src": "2040:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2050:9:4",
														"nodeType": "YulTypedName",
														"src": "2050:9:4",
														"type": ""
													}
												],
												"src": "1987:139:4"
											},
											{
												"body": {
													"nativeSrc": "2210:79:4",
													"nodeType": "YulBlock",
													"src": "2210:79:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2227:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2227:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2276:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2276:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IPyth_$162_to_t_address",
																			"nativeSrc": "2232:43:4",
																			"nodeType": "YulIdentifier",
																			"src": "2232:43:4"
																		},
																		"nativeSrc": "2232:50:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2232:50:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2220:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:4"
																},
																"nativeSrc": "2220:63:4",
																"nodeType": "YulFunctionCall",
																"src": "2220:63:4"
															},
															"nativeSrc": "2220:63:4",
															"nodeType": "YulExpressionStatement",
															"src": "2220:63:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IPyth_$162_to_t_address_fromStack",
												"nativeSrc": "2132:157:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2198:5:4",
														"nodeType": "YulTypedName",
														"src": "2198:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2205:3:4",
														"nodeType": "YulTypedName",
														"src": "2205:3:4",
														"type": ""
													}
												],
												"src": "2132:157:4"
											},
											{
												"body": {
													"nativeSrc": "2406:137:4",
													"nodeType": "YulBlock",
													"src": "2406:137:4",
													"statements": [
														{
															"nativeSrc": "2416:26:4",
															"nodeType": "YulAssignment",
															"src": "2416:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2428:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2428:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2439:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2439:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2424:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2424:3:4"
																},
																"nativeSrc": "2424:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2424:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2416:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2416:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2509:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2522:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2522:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2533:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2533:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2518:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:4"
																		},
																		"nativeSrc": "2518:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IPyth_$162_to_t_address_fromStack",
																	"nativeSrc": "2452:56:4",
																	"nodeType": "YulIdentifier",
																	"src": "2452:56:4"
																},
																"nativeSrc": "2452:84:4",
																"nodeType": "YulFunctionCall",
																"src": "2452:84:4"
															},
															"nativeSrc": "2452:84:4",
															"nodeType": "YulExpressionStatement",
															"src": "2452:84:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPyth_$162__to_t_address__fromStack_reversed",
												"nativeSrc": "2295:248:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2378:9:4",
														"nodeType": "YulTypedName",
														"src": "2378:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2390:6:4",
														"nodeType": "YulTypedName",
														"src": "2390:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2401:4:4",
														"nodeType": "YulTypedName",
														"src": "2401:4:4",
														"type": ""
													}
												],
												"src": "2295:248:4"
											},
											{
												"body": {
													"nativeSrc": "2589:35:4",
													"nodeType": "YulBlock",
													"src": "2589:35:4",
													"statements": [
														{
															"nativeSrc": "2599:19:4",
															"nodeType": "YulAssignment",
															"src": "2599:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2615:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2615:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2609:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2609:5:4"
																},
																"nativeSrc": "2609:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2609:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2599:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2549:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2582:6:4",
														"nodeType": "YulTypedName",
														"src": "2582:6:4",
														"type": ""
													}
												],
												"src": "2549:75:4"
											},
											{
												"body": {
													"nativeSrc": "2719:28:4",
													"nodeType": "YulBlock",
													"src": "2719:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2736:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2736:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2739:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2739:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2729:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:4"
																},
																"nativeSrc": "2729:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2729:12:4"
															},
															"nativeSrc": "2729:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "2729:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2630:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2630:117:4"
											},
											{
												"body": {
													"nativeSrc": "2842:28:4",
													"nodeType": "YulBlock",
													"src": "2842:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2859:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2859:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2862:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2862:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2852:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2852:6:4"
																},
																"nativeSrc": "2852:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2852:12:4"
															},
															"nativeSrc": "2852:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "2852:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2753:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2753:117:4"
											},
											{
												"body": {
													"nativeSrc": "2965:28:4",
													"nodeType": "YulBlock",
													"src": "2965:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2982:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2982:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2985:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2985:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2975:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:4"
																},
																"nativeSrc": "2975:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2975:12:4"
															},
															"nativeSrc": "2975:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "2975:12:4"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "2876:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2876:117:4"
											},
											{
												"body": {
													"nativeSrc": "3047:54:4",
													"nodeType": "YulBlock",
													"src": "3047:54:4",
													"statements": [
														{
															"nativeSrc": "3057:38:4",
															"nodeType": "YulAssignment",
															"src": "3057:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3075:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3075:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3082:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3082:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3071:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3071:3:4"
																		},
																		"nativeSrc": "3071:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3071:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3091:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3091:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3087:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:4"
																		},
																		"nativeSrc": "3087:7:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3087:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3067:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3067:3:4"
																},
																"nativeSrc": "3067:28:4",
																"nodeType": "YulFunctionCall",
																"src": "3067:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3057:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3057:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2999:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3030:5:4",
														"nodeType": "YulTypedName",
														"src": "3030:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3040:6:4",
														"nodeType": "YulTypedName",
														"src": "3040:6:4",
														"type": ""
													}
												],
												"src": "2999:102:4"
											},
											{
												"body": {
													"nativeSrc": "3135:152:4",
													"nodeType": "YulBlock",
													"src": "3135:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3152:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3152:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3155:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3145:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:4"
																},
																"nativeSrc": "3145:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3145:88:4"
															},
															"nativeSrc": "3145:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3145:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3249:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3249:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3252:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3252:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3242:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:4"
																},
																"nativeSrc": "3242:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3242:15:4"
															},
															"nativeSrc": "3242:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3242:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3273:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3276:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3266:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:4"
																},
																"nativeSrc": "3266:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3266:15:4"
															},
															"nativeSrc": "3266:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3266:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3107:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3107:180:4"
											},
											{
												"body": {
													"nativeSrc": "3336:238:4",
													"nodeType": "YulBlock",
													"src": "3336:238:4",
													"statements": [
														{
															"nativeSrc": "3346:58:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3346:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3368:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3368:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3398:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "3398:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3376:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "3376:21:4"
																		},
																		"nativeSrc": "3376:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3376:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3364:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:4"
																},
																"nativeSrc": "3364:40:4",
																"nodeType": "YulFunctionCall",
																"src": "3364:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3350:10:4",
																	"nodeType": "YulTypedName",
																	"src": "3350:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3515:22:4",
																"nodeType": "YulBlock",
																"src": "3515:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3517:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3517:16:4"
																			},
																			"nativeSrc": "3517:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3517:18:4"
																		},
																		"nativeSrc": "3517:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3517:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3458:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "3458:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3470:18:4",
																				"nodeType": "YulLiteral",
																				"src": "3470:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3455:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3455:2:4"
																		},
																		"nativeSrc": "3455:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3494:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "3494:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3506:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3506:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3491:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3491:2:4"
																		},
																		"nativeSrc": "3491:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3452:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3452:2:4"
																},
																"nativeSrc": "3452:62:4",
																"nodeType": "YulFunctionCall",
																"src": "3452:62:4"
															},
															"nativeSrc": "3449:88:4",
															"nodeType": "YulIf",
															"src": "3449:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3553:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3553:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3557:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "3557:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3546:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3546:6:4"
																},
																"nativeSrc": "3546:22:4",
																"nodeType": "YulFunctionCall",
																"src": "3546:22:4"
															},
															"nativeSrc": "3546:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "3546:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3293:281:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3322:6:4",
														"nodeType": "YulTypedName",
														"src": "3322:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3330:4:4",
														"nodeType": "YulTypedName",
														"src": "3330:4:4",
														"type": ""
													}
												],
												"src": "3293:281:4"
											},
											{
												"body": {
													"nativeSrc": "3621:88:4",
													"nodeType": "YulBlock",
													"src": "3621:88:4",
													"statements": [
														{
															"nativeSrc": "3631:30:4",
															"nodeType": "YulAssignment",
															"src": "3631:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "3641:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3641:18:4"
																},
																"nativeSrc": "3641:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3641:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3631:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3631:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3690:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3690:6:4"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "3698:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3698:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "3670:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "3670:19:4"
																},
																"nativeSrc": "3670:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3670:33:4"
															},
															"nativeSrc": "3670:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3670:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3580:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3605:4:4",
														"nodeType": "YulTypedName",
														"src": "3605:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3614:6:4",
														"nodeType": "YulTypedName",
														"src": "3614:6:4",
														"type": ""
													}
												],
												"src": "3580:129:4"
											},
											{
												"body": {
													"nativeSrc": "3804:28:4",
													"nodeType": "YulBlock",
													"src": "3804:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3821:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3821:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3824:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3824:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3814:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:4"
																},
																"nativeSrc": "3814:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3814:12:4"
															},
															"nativeSrc": "3814:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "3814:12:4"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "3715:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3715:117:4"
											},
											{
												"body": {
													"nativeSrc": "3879:77:4",
													"nodeType": "YulBlock",
													"src": "3879:77:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3934:16:4",
																"nodeType": "YulBlock",
																"src": "3934:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3943:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3943:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3946:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3946:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3936:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3936:6:4"
																			},
																			"nativeSrc": "3936:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3936:12:4"
																		},
																		"nativeSrc": "3936:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3936:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3902:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3902:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3925:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3925:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int64",
																					"nativeSrc": "3909:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "3909:15:4"
																				},
																				"nativeSrc": "3909:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3909:22:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3899:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3899:2:4"
																		},
																		"nativeSrc": "3899:33:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3899:33:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3892:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:4"
																},
																"nativeSrc": "3892:41:4",
																"nodeType": "YulFunctionCall",
																"src": "3892:41:4"
															},
															"nativeSrc": "3889:61:4",
															"nodeType": "YulIf",
															"src": "3889:61:4"
														}
													]
												},
												"name": "validator_revert_t_int64",
												"nativeSrc": "3838:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3872:5:4",
														"nodeType": "YulTypedName",
														"src": "3872:5:4",
														"type": ""
													}
												],
												"src": "3838:118:4"
											},
											{
												"body": {
													"nativeSrc": "4023:78:4",
													"nodeType": "YulBlock",
													"src": "4023:78:4",
													"statements": [
														{
															"nativeSrc": "4033:22:4",
															"nodeType": "YulAssignment",
															"src": "4033:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4048:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4048:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4042:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4042:5:4"
																},
																"nativeSrc": "4042:13:4",
																"nodeType": "YulFunctionCall",
																"src": "4042:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4033:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4033:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4089:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4089:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int64",
																	"nativeSrc": "4064:24:4",
																	"nodeType": "YulIdentifier",
																	"src": "4064:24:4"
																},
																"nativeSrc": "4064:31:4",
																"nodeType": "YulFunctionCall",
																"src": "4064:31:4"
															},
															"nativeSrc": "4064:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "4064:31:4"
														}
													]
												},
												"name": "abi_decode_t_int64_fromMemory",
												"nativeSrc": "3962:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4001:6:4",
														"nodeType": "YulTypedName",
														"src": "4001:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4009:3:4",
														"nodeType": "YulTypedName",
														"src": "4009:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4017:5:4",
														"nodeType": "YulTypedName",
														"src": "4017:5:4",
														"type": ""
													}
												],
												"src": "3962:139:4"
											},
											{
												"body": {
													"nativeSrc": "4151:57:4",
													"nodeType": "YulBlock",
													"src": "4151:57:4",
													"statements": [
														{
															"nativeSrc": "4161:41:4",
															"nodeType": "YulAssignment",
															"src": "4161:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4176:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4176:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4183:18:4",
																		"nodeType": "YulLiteral",
																		"src": "4183:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4172:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4172:3:4"
																},
																"nativeSrc": "4172:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4172:30:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4161:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4161:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "4107:101:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4133:5:4",
														"nodeType": "YulTypedName",
														"src": "4133:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4143:7:4",
														"nodeType": "YulTypedName",
														"src": "4143:7:4",
														"type": ""
													}
												],
												"src": "4107:101:4"
											},
											{
												"body": {
													"nativeSrc": "4256:78:4",
													"nodeType": "YulBlock",
													"src": "4256:78:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4312:16:4",
																"nodeType": "YulBlock",
																"src": "4312:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4324:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:4"
																			},
																			"nativeSrc": "4314:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:12:4"
																		},
																		"nativeSrc": "4314:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4279:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4279:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4303:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4303:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "4286:16:4",
																					"nodeType": "YulIdentifier",
																					"src": "4286:16:4"
																				},
																				"nativeSrc": "4286:23:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4286:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4276:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4276:2:4"
																		},
																		"nativeSrc": "4276:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4276:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4269:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4269:6:4"
																},
																"nativeSrc": "4269:42:4",
																"nodeType": "YulFunctionCall",
																"src": "4269:42:4"
															},
															"nativeSrc": "4266:62:4",
															"nodeType": "YulIf",
															"src": "4266:62:4"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "4214:120:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4249:5:4",
														"nodeType": "YulTypedName",
														"src": "4249:5:4",
														"type": ""
													}
												],
												"src": "4214:120:4"
											},
											{
												"body": {
													"nativeSrc": "4402:79:4",
													"nodeType": "YulBlock",
													"src": "4402:79:4",
													"statements": [
														{
															"nativeSrc": "4412:22:4",
															"nodeType": "YulAssignment",
															"src": "4412:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4427:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4427:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4421:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4421:5:4"
																},
																"nativeSrc": "4421:13:4",
																"nodeType": "YulFunctionCall",
																"src": "4421:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4412:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4412:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4469:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4469:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "4443:25:4",
																	"nodeType": "YulIdentifier",
																	"src": "4443:25:4"
																},
																"nativeSrc": "4443:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4443:32:4"
															},
															"nativeSrc": "4443:32:4",
															"nodeType": "YulExpressionStatement",
															"src": "4443:32:4"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nativeSrc": "4340:141:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4380:6:4",
														"nodeType": "YulTypedName",
														"src": "4380:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4388:3:4",
														"nodeType": "YulTypedName",
														"src": "4388:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4396:5:4",
														"nodeType": "YulTypedName",
														"src": "4396:5:4",
														"type": ""
													}
												],
												"src": "4340:141:4"
											},
											{
												"body": {
													"nativeSrc": "4528:77:4",
													"nodeType": "YulBlock",
													"src": "4528:77:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4583:16:4",
																"nodeType": "YulBlock",
																"src": "4583:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4592:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4592:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4595:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4595:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4585:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4585:6:4"
																			},
																			"nativeSrc": "4585:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4585:12:4"
																		},
																		"nativeSrc": "4585:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4585:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4551:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4551:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4574:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4574:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int32",
																					"nativeSrc": "4558:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "4558:15:4"
																				},
																				"nativeSrc": "4558:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4558:22:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4548:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4548:2:4"
																		},
																		"nativeSrc": "4548:33:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4548:33:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4541:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4541:6:4"
																},
																"nativeSrc": "4541:41:4",
																"nodeType": "YulFunctionCall",
																"src": "4541:41:4"
															},
															"nativeSrc": "4538:61:4",
															"nodeType": "YulIf",
															"src": "4538:61:4"
														}
													]
												},
												"name": "validator_revert_t_int32",
												"nativeSrc": "4487:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4521:5:4",
														"nodeType": "YulTypedName",
														"src": "4521:5:4",
														"type": ""
													}
												],
												"src": "4487:118:4"
											},
											{
												"body": {
													"nativeSrc": "4672:78:4",
													"nodeType": "YulBlock",
													"src": "4672:78:4",
													"statements": [
														{
															"nativeSrc": "4682:22:4",
															"nodeType": "YulAssignment",
															"src": "4682:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4697:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4697:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4691:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4691:5:4"
																},
																"nativeSrc": "4691:13:4",
																"nodeType": "YulFunctionCall",
																"src": "4691:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4682:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4682:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4738:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4738:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int32",
																	"nativeSrc": "4713:24:4",
																	"nodeType": "YulIdentifier",
																	"src": "4713:24:4"
																},
																"nativeSrc": "4713:31:4",
																"nodeType": "YulFunctionCall",
																"src": "4713:31:4"
															},
															"nativeSrc": "4713:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "4713:31:4"
														}
													]
												},
												"name": "abi_decode_t_int32_fromMemory",
												"nativeSrc": "4611:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4650:6:4",
														"nodeType": "YulTypedName",
														"src": "4650:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4658:3:4",
														"nodeType": "YulTypedName",
														"src": "4658:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4666:5:4",
														"nodeType": "YulTypedName",
														"src": "4666:5:4",
														"type": ""
													}
												],
												"src": "4611:139:4"
											},
											{
												"body": {
													"nativeSrc": "4799:79:4",
													"nodeType": "YulBlock",
													"src": "4799:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4856:16:4",
																"nodeType": "YulBlock",
																"src": "4856:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4865:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4865:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4868:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4868:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4858:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4858:6:4"
																			},
																			"nativeSrc": "4858:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4858:12:4"
																		},
																		"nativeSrc": "4858:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4858:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4822:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4822:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4847:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4847:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4829:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "4829:17:4"
																				},
																				"nativeSrc": "4829:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4829:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4819:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4819:2:4"
																		},
																		"nativeSrc": "4819:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4819:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4812:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4812:6:4"
																},
																"nativeSrc": "4812:43:4",
																"nodeType": "YulFunctionCall",
																"src": "4812:43:4"
															},
															"nativeSrc": "4809:63:4",
															"nodeType": "YulIf",
															"src": "4809:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4756:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:4",
														"nodeType": "YulTypedName",
														"src": "4792:5:4",
														"type": ""
													}
												],
												"src": "4756:122:4"
											},
											{
												"body": {
													"nativeSrc": "4947:80:4",
													"nodeType": "YulBlock",
													"src": "4947:80:4",
													"statements": [
														{
															"nativeSrc": "4957:22:4",
															"nodeType": "YulAssignment",
															"src": "4957:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4972:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4972:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4966:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4966:5:4"
																},
																"nativeSrc": "4966:13:4",
																"nodeType": "YulFunctionCall",
																"src": "4966:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4957:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4957:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5015:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5015:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4988:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "4988:26:4"
																},
																"nativeSrc": "4988:33:4",
																"nodeType": "YulFunctionCall",
																"src": "4988:33:4"
															},
															"nativeSrc": "4988:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "4988:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4884:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4925:6:4",
														"nodeType": "YulTypedName",
														"src": "4925:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4933:3:4",
														"nodeType": "YulTypedName",
														"src": "4933:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4941:5:4",
														"nodeType": "YulTypedName",
														"src": "4941:5:4",
														"type": ""
													}
												],
												"src": "4884:143:4"
											},
											{
												"body": {
													"nativeSrc": "5153:863:4",
													"nodeType": "YulBlock",
													"src": "5153:863:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5197:83:4",
																"nodeType": "YulBlock",
																"src": "5197:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "5199:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5199:77:4"
																			},
																			"nativeSrc": "5199:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5199:79:4"
																		},
																		"nativeSrc": "5199:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5199:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "5174:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5174:3:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5179:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5179:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5170:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:4"
																		},
																		"nativeSrc": "5170:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5170:19:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5191:4:4",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5166:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:4"
																},
																"nativeSrc": "5166:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5166:30:4"
															},
															"nativeSrc": "5163:117:4",
															"nodeType": "YulIf",
															"src": "5163:117:4"
														},
														{
															"nativeSrc": "5289:30:4",
															"nodeType": "YulAssignment",
															"src": "5289:30:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5314:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5314:4:4",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5298:15:4",
																	"nodeType": "YulIdentifier",
																	"src": "5298:15:4"
																},
																"nativeSrc": "5298:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5298:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5289:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5289:5:4"
																}
															]
														},
														{
															"nativeSrc": "5329:160:4",
															"nodeType": "YulBlock",
															"src": "5329:160:4",
															"statements": [
																{
																	"nativeSrc": "5365:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5365:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5379:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5379:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5369:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5369:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5405:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5405:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5412:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5412:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5401:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5401:3:4"
																				},
																				"nativeSrc": "5401:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5401:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "5453:9:4",
																								"nodeType": "YulIdentifier",
																								"src": "5453:9:4"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "5464:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "5464:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5449:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "5449:3:4"
																						},
																						"nativeSrc": "5449:22:4",
																						"nodeType": "YulFunctionCall",
																						"src": "5449:22:4"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "5473:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "5473:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_int64_fromMemory",
																					"nativeSrc": "5419:29:4",
																					"nodeType": "YulIdentifier",
																					"src": "5419:29:4"
																				},
																				"nativeSrc": "5419:58:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5419:58:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "5394:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5394:6:4"
																		},
																		"nativeSrc": "5394:84:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5394:84:4"
																	},
																	"nativeSrc": "5394:84:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "5394:84:4"
																}
															]
														},
														{
															"nativeSrc": "5499:161:4",
															"nodeType": "YulBlock",
															"src": "5499:161:4",
															"statements": [
																{
																	"nativeSrc": "5534:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5534:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5548:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5538:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5538:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5575:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5575:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5582:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5582:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5571:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5571:3:4"
																				},
																				"nativeSrc": "5571:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5571:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "5624:9:4",
																								"nodeType": "YulIdentifier",
																								"src": "5624:9:4"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "5635:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "5635:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5620:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "5620:3:4"
																						},
																						"nativeSrc": "5620:22:4",
																						"nodeType": "YulFunctionCall",
																						"src": "5620:22:4"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "5644:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "5644:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint64_fromMemory",
																					"nativeSrc": "5589:30:4",
																					"nodeType": "YulIdentifier",
																					"src": "5589:30:4"
																				},
																				"nativeSrc": "5589:59:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5589:59:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "5564:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5564:6:4"
																		},
																		"nativeSrc": "5564:85:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5564:85:4"
																	},
																	"nativeSrc": "5564:85:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "5564:85:4"
																}
															]
														},
														{
															"nativeSrc": "5670:160:4",
															"nodeType": "YulBlock",
															"src": "5670:160:4",
															"statements": [
																{
																	"nativeSrc": "5705:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5705:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5719:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5719:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5709:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5709:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5746:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5746:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5753:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5753:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5742:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:4"
																				},
																				"nativeSrc": "5742:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5742:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "5794:9:4",
																								"nodeType": "YulIdentifier",
																								"src": "5794:9:4"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "5805:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "5805:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5790:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "5790:3:4"
																						},
																						"nativeSrc": "5790:22:4",
																						"nodeType": "YulFunctionCall",
																						"src": "5790:22:4"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "5814:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "5814:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_int32_fromMemory",
																					"nativeSrc": "5760:29:4",
																					"nodeType": "YulIdentifier",
																					"src": "5760:29:4"
																				},
																				"nativeSrc": "5760:58:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5760:58:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "5735:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5735:6:4"
																		},
																		"nativeSrc": "5735:84:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5735:84:4"
																	},
																	"nativeSrc": "5735:84:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "5735:84:4"
																}
															]
														},
														{
															"nativeSrc": "5840:169:4",
															"nodeType": "YulBlock",
															"src": "5840:169:4",
															"statements": [
																{
																	"nativeSrc": "5882:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5882:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5896:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5896:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5886:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5886:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5923:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5923:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5930:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5930:4:4",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5919:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5919:3:4"
																				},
																				"nativeSrc": "5919:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5919:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "5973:9:4",
																								"nodeType": "YulIdentifier",
																								"src": "5973:9:4"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "5984:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "5984:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5969:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "5969:3:4"
																						},
																						"nativeSrc": "5969:22:4",
																						"nodeType": "YulFunctionCall",
																						"src": "5969:22:4"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "5993:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "5993:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "5937:31:4",
																					"nodeType": "YulIdentifier",
																					"src": "5937:31:4"
																				},
																				"nativeSrc": "5937:60:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5937:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "5912:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5912:6:4"
																		},
																		"nativeSrc": "5912:86:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5912:86:4"
																	},
																	"nativeSrc": "5912:86:4",
																	"nodeType": "YulExpressionStatement",
																	"src": "5912:86:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_Price_$203_memory_ptr_fromMemory",
												"nativeSrc": "5065:951:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5128:9:4",
														"nodeType": "YulTypedName",
														"src": "5128:9:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5139:3:4",
														"nodeType": "YulTypedName",
														"src": "5139:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5147:5:4",
														"nodeType": "YulTypedName",
														"src": "5147:5:4",
														"type": ""
													}
												],
												"src": "5065:951:4"
											},
											{
												"body": {
													"nativeSrc": "6121:297:4",
													"nodeType": "YulBlock",
													"src": "6121:297:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6168:83:4",
																"nodeType": "YulBlock",
																"src": "6168:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6170:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "6170:77:4"
																			},
																			"nativeSrc": "6170:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:79:4"
																		},
																		"nativeSrc": "6170:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6142:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6142:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6151:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6151:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6138:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6138:3:4"
																		},
																		"nativeSrc": "6138:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6138:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:3:4",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6134:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6134:3:4"
																},
																"nativeSrc": "6134:33:4",
																"nodeType": "YulFunctionCall",
																"src": "6134:33:4"
															},
															"nativeSrc": "6131:120:4",
															"nodeType": "YulIf",
															"src": "6131:120:4"
														},
														{
															"nativeSrc": "6261:150:4",
															"nodeType": "YulBlock",
															"src": "6261:150:4",
															"statements": [
																{
																	"nativeSrc": "6276:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6276:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6290:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6290:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6280:6:4",
																			"nodeType": "YulTypedName",
																			"src": "6280:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6305:96:4",
																	"nodeType": "YulAssignment",
																	"src": "6305:96:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6373:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6373:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6384:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "6384:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6369:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6369:3:4"
																				},
																				"nativeSrc": "6369:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6369:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6393:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6393:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_Price_$203_memory_ptr_fromMemory",
																			"nativeSrc": "6315:53:4",
																			"nodeType": "YulIdentifier",
																			"src": "6315:53:4"
																		},
																		"nativeSrc": "6315:86:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:86:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6305:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6305:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Price_$203_memory_ptr_fromMemory",
												"nativeSrc": "6022:396:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6091:9:4",
														"nodeType": "YulTypedName",
														"src": "6091:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6102:7:4",
														"nodeType": "YulTypedName",
														"src": "6102:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6114:6:4",
														"nodeType": "YulTypedName",
														"src": "6114:6:4",
														"type": ""
													}
												],
												"src": "6022:396:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int64(value) -> cleaned {\n        cleaned := signextend(7, value)\n    }\n\n    function abi_encode_t_int64_to_t_int64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function cleanup_t_int32(value) -> cleaned {\n        cleaned := signextend(3, value)\n    }\n\n    function abi_encode_t_int32_to_t_int32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int32(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_int64_t_int32_t_uint256__to_t_int64_t_int32_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_int64_to_t_int64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int32_to_t_int32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IPyth_$162_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPyth_$162_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPyth_$162_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPyth_$162__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPyth_$162_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_int64(value) {\n        if iszero(eq(value, cleanup_t_int64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int64(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function validator_revert_t_int32(value) {\n        if iszero(eq(value, cleanup_t_int32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int32(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct PythStructs.Price\n    function abi_decode_t_struct$_Price_$203_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // price\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_int64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // conf\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // expo\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_int32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // publishTime\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Price_$203_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Price_$203_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80631999bb9e1461004357806350d5041d14610061578063f98d06f014610081575b5f5ffd5b61004b61009f565b604051610058919061019b565b60405180910390f35b6100696100a5565b60405161007893929190610202565b60405180910390f35b61008961015f565b60405161009691906102b1565b60405180910390f35b60015481565b5f5f5f5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396834ad36001546040518263ffffffff1660e01b8152600401610104919061019b565b608060405180830381865afa15801561011f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101439190610493565b9050805f01519350806040015192508060600151915050909192565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f819050919050565b61019581610183565b82525050565b5f6020820190506101ae5f83018461018c565b92915050565b5f8160070b9050919050565b6101c9816101b4565b82525050565b5f8160030b9050919050565b6101e4816101cf565b82525050565b5f819050919050565b6101fc816101ea565b82525050565b5f6060820190506102155f8301866101c0565b61022260208301856101db565b61022f60408301846101f3565b949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61027961027461026f84610237565b610256565b610237565b9050919050565b5f61028a8261025f565b9050919050565b5f61029b82610280565b9050919050565b6102ab81610291565b82525050565b5f6020820190506102c45f8301846102a2565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610321826102db565b810181811067ffffffffffffffff821117156103405761033f6102eb565b5b80604052505050565b5f6103526102ca565b905061035e8282610318565b919050565b61036c816101b4565b8114610376575f5ffd5b50565b5f8151905061038781610363565b92915050565b5f67ffffffffffffffff82169050919050565b6103a98161038d565b81146103b3575f5ffd5b50565b5f815190506103c4816103a0565b92915050565b6103d3816101cf565b81146103dd575f5ffd5b50565b5f815190506103ee816103ca565b92915050565b6103fd816101ea565b8114610407575f5ffd5b50565b5f81519050610418816103f4565b92915050565b5f60808284031215610433576104326102d7565b5b61043d6080610349565b90505f61044c84828501610379565b5f83015250602061045f848285016103b6565b6020830152506040610473848285016103e0565b60408301525060606104878482850161040a565b60608301525092915050565b5f608082840312156104a8576104a76102d3565b5b5f6104b58482850161041e565b9150509291505056fea2646970667358221220b0205702a49ae751aae7bb8a0e61bfae023fc1ba6230db4f2db5baa824e42f9a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1999BB9E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x50D5041D EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x96834AD3 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x493 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD MLOAD SWAP4 POP DUP1 PUSH1 0x40 ADD MLOAD SWAP3 POP DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195 DUP2 PUSH2 0x183 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE PUSH0 DUP4 ADD DUP5 PUSH2 0x18C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x1B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x3 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x1CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x215 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x222 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x22F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x279 PUSH2 0x274 PUSH2 0x26F DUP5 PUSH2 0x237 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28A DUP3 PUSH2 0x25F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29B DUP3 PUSH2 0x280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AB DUP2 PUSH2 0x291 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x321 DUP3 PUSH2 0x2DB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0x2EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x352 PUSH2 0x2CA JUMP JUMPDEST SWAP1 POP PUSH2 0x35E DUP3 DUP3 PUSH2 0x318 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH2 0x1B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x376 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x38D JUMP JUMPDEST DUP2 EQ PUSH2 0x3B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C4 DUP2 PUSH2 0x3A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D3 DUP2 PUSH2 0x1CF JUMP JUMPDEST DUP2 EQ PUSH2 0x3DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EE DUP2 PUSH2 0x3CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FD DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP2 EQ PUSH2 0x407 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x418 DUP2 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x2D7 JUMP JUMPDEST JUMPDEST PUSH2 0x43D PUSH1 0x80 PUSH2 0x349 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x44C DUP5 DUP3 DUP6 ADD PUSH2 0x379 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x45F DUP5 DUP3 DUP6 ADD PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x473 DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x487 DUP5 DUP3 DUP6 ADD PUSH2 0x40A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A7 PUSH2 0x2D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B5 DUP5 DUP3 DUP6 ADD PUSH2 0x41E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 KECCAK256 JUMPI MUL LOG4 SWAP11 SWAPN 0x51 0xAA SWAPN 0xBB DUP11 0xE PUSH2 0xBFAE MUL EXTCODEHASH 0xC1 0xBA PUSH3 0x30DB4F 0x2D 0xB5 0xBA 0xA8 0x24 RETF 0x2F SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:789:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;475:479;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;201:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;224:26;;;;:::o;475:479::-;528:11;541:10;553:16;658:26;687:4;;;;;;;;;;;:19;;;707:11;;687:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;658:61;;743:1;:7;;;729:21;;792:1;:6;;;778:20;;844:1;:13;;;830:27;;571:383;475:479;;;:::o;201:17::-;;;;;;;;;;;;;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;477:7;520:5;517:1;506:20;495:31;;442:90;;;:::o;538:112::-;621:22;637:5;621:22;:::i;:::-;616:3;609:35;538:112;;:::o;656:90::-;691:7;734:5;731:1;720:20;709:31;;656:90;;;:::o;752:112::-;835:22;851:5;835:22;:::i;:::-;830:3;823:35;752:112;;:::o;870:77::-;907:7;936:5;925:16;;870:77;;;:::o;953:118::-;1040:24;1058:5;1040:24;:::i;:::-;1035:3;1028:37;953:118;;:::o;1077:426::-;1218:4;1256:2;1245:9;1241:18;1233:26;;1269:67;1333:1;1322:9;1318:17;1309:6;1269:67;:::i;:::-;1346:68;1410:2;1399:9;1395:18;1386:6;1346:68;:::i;:::-;1424:72;1492:2;1481:9;1477:18;1468:6;1424:72;:::i;:::-;1077:426;;;;;;:::o;1509:126::-;1546:7;1586:42;1579:5;1575:54;1564:65;;1509:126;;;:::o;1641:60::-;1669:3;1690:5;1683:12;;1641:60;;;:::o;1707:142::-;1757:9;1790:53;1808:34;1817:24;1835:5;1817:24;:::i;:::-;1808:34;:::i;:::-;1790:53;:::i;:::-;1777:66;;1707:142;;;:::o;1855:126::-;1905:9;1938:37;1969:5;1938:37;:::i;:::-;1925:50;;1855:126;;;:::o;1987:139::-;2050:9;2083:37;2114:5;2083:37;:::i;:::-;2070:50;;1987:139;;;:::o;2132:157::-;2232:50;2276:5;2232:50;:::i;:::-;2227:3;2220:63;2132:157;;:::o;2295:248::-;2401:4;2439:2;2428:9;2424:18;2416:26;;2452:84;2533:1;2522:9;2518:17;2509:6;2452:84;:::i;:::-;2295:248;;;;:::o;2549:75::-;2582:6;2615:2;2609:9;2599:19;;2549:75;:::o;2630:117::-;2739:1;2736;2729:12;2876:117;2985:1;2982;2975:12;2999:102;3040:6;3091:2;3087:7;3082:2;3075:5;3071:14;3067:28;3057:38;;2999:102;;;:::o;3107:180::-;3155:77;3152:1;3145:88;3252:4;3249:1;3242:15;3276:4;3273:1;3266:15;3293:281;3376:27;3398:4;3376:27;:::i;:::-;3368:6;3364:40;3506:6;3494:10;3491:22;3470:18;3458:10;3455:34;3452:62;3449:88;;;3517:18;;:::i;:::-;3449:88;3557:10;3553:2;3546:22;3336:238;3293:281;;:::o;3580:129::-;3614:6;3641:20;;:::i;:::-;3631:30;;3670:33;3698:4;3690:6;3670:33;:::i;:::-;3580:129;;;:::o;3838:118::-;3909:22;3925:5;3909:22;:::i;:::-;3902:5;3899:33;3889:61;;3946:1;3943;3936:12;3889:61;3838:118;:::o;3962:139::-;4017:5;4048:6;4042:13;4033:22;;4064:31;4089:5;4064:31;:::i;:::-;3962:139;;;;:::o;4107:101::-;4143:7;4183:18;4176:5;4172:30;4161:41;;4107:101;;;:::o;4214:120::-;4286:23;4303:5;4286:23;:::i;:::-;4279:5;4276:34;4266:62;;4324:1;4321;4314:12;4266:62;4214:120;:::o;4340:141::-;4396:5;4427:6;4421:13;4412:22;;4443:32;4469:5;4443:32;:::i;:::-;4340:141;;;;:::o;4487:118::-;4558:22;4574:5;4558:22;:::i;:::-;4551:5;4548:33;4538:61;;4595:1;4592;4585:12;4538:61;4487:118;:::o;4611:139::-;4666:5;4697:6;4691:13;4682:22;;4713:31;4738:5;4713:31;:::i;:::-;4611:139;;;;:::o;4756:122::-;4829:24;4847:5;4829:24;:::i;:::-;4822:5;4819:35;4809:63;;4868:1;4865;4858:12;4809:63;4756:122;:::o;4884:143::-;4941:5;4972:6;4966:13;4957:22;;4988:33;5015:5;4988:33;:::i;:::-;4884:143;;;;:::o;5065:951::-;5147:5;5191:4;5179:9;5174:3;5170:19;5166:30;5163:117;;;5199:79;;:::i;:::-;5163:117;5298:21;5314:4;5298:21;:::i;:::-;5289:30;;5379:1;5419:58;5473:3;5464:6;5453:9;5449:22;5419:58;:::i;:::-;5412:4;5405:5;5401:16;5394:84;5329:160;5548:2;5589:59;5644:3;5635:6;5624:9;5620:22;5589:59;:::i;:::-;5582:4;5575:5;5571:16;5564:85;5499:161;5719:2;5760:58;5814:3;5805:6;5794:9;5790:22;5760:58;:::i;:::-;5753:4;5746:5;5742:16;5735:84;5670:160;5896:2;5937:60;5993:3;5984:6;5973:9;5969:22;5937:60;:::i;:::-;5930:4;5923:5;5919:16;5912:86;5840:169;5065:951;;;;:::o;6022:396::-;6114:6;6163:3;6151:9;6142:7;6138:23;6134:33;6131:120;;;6170:79;;:::i;:::-;6131:120;6290:1;6315:86;6393:7;6384:6;6373:9;6369:22;6315:86;:::i;:::-;6305:96;;6261:150;6022:396;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "253600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getLatestPriceView()": "infinite",
								"priceFeedId()": "2403",
								"pyth()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 956,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 257,
									"end": 392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 257,
									"end": 392,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 336,
									"end": 348,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 349,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 323,
									"end": 349,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 349,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 349,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 323,
									"end": 349,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 373,
									"end": 385,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 359,
									"end": 370,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 385,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 359,
									"end": 385,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 359,
									"end": 385,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 359,
									"end": 385,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 392,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 167,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 167,
									"end": 956,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 167,
									"end": 956,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 167,
									"end": 956,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 167,
									"end": 956,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 956,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0205702a49ae751aae7bb8a0e61bfae023fc1ba6230db4f2db5baa824e42f9a64736f6c634300081e0033",
									".code": [
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "1999BB9E"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "50D5041D"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "F98D06F0"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 956,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 475,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 475,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 201,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 201,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 475,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 528,
											"end": 539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 691,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 687,
											"end": 691,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 691,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 687,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 687,
											"end": 691,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 687,
											"end": 706,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 687,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "96834AD3"
										},
										{
											"begin": 707,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 707,
											"end": 718,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 687,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 687,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 719,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 687,
											"end": 719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 658,
											"end": 719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 658,
											"end": 719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 743,
											"end": 744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 743,
											"end": 750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 743,
											"end": 750,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 729,
											"end": 750,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 729,
											"end": 750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 792,
											"end": 793,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 792,
											"end": 798,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 778,
											"end": 798,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 778,
											"end": 798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 844,
											"end": 857,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 844,
											"end": 857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 844,
											"end": 857,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 830,
											"end": 857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 830,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 571,
											"end": 954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 475,
											"end": 954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 201,
											"end": 218,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 201,
											"end": 218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 525,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 506,
											"end": 526,
											"name": "SIGNEXTEND",
											"source": 4
										},
										{
											"begin": 495,
											"end": 526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 495,
											"end": 526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 650,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 538,
											"end": 650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 621,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 637,
											"end": 642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 621,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 621,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 621,
											"end": 643,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 621,
											"end": 643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 616,
											"end": 619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 609,
											"end": 644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 538,
											"end": 650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 746,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 656,
											"end": 746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 720,
											"end": 740,
											"name": "SIGNEXTEND",
											"source": 4
										},
										{
											"begin": 709,
											"end": 740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 709,
											"end": 740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 656,
											"end": 746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 752,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 752,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 835,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 857,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 835,
											"end": 857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 830,
											"end": 833,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 823,
											"end": 858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 752,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 752,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 752,
											"end": 864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 947,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 907,
											"end": 914,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 925,
											"end": 941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 953,
											"end": 1071,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 953,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1058,
											"end": 1063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1040,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1065,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 953,
											"end": 1071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 953,
											"end": 1071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 953,
											"end": 1071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1335,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1269,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1269,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1410,
											"end": 1412,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1392,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1346,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1414,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1346,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1424,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1635,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1509,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1628,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1635,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1701,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1641,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1707,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1808,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1817,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1817,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1808,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1808,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1790,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1790,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1855,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 1914,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1938,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1987,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2083,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2126,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2132,
											"end": 2289,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2132,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2276,
											"end": 2281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2232,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2232,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2132,
											"end": 2289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2132,
											"end": 2289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2132,
											"end": 2289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2543,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2295,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2533,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2452,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2536,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2452,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2543,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2624,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2549,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2617,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2747,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2630,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2741,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2993,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2876,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2987,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3093,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3075,
											"end": 3080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3085,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3287,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3107,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3232,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3273,
											"end": 3274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3281,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3574,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3293,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3398,
											"end": 3402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3376,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3403,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3376,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3374,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3513,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3458,
											"end": 3468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3489,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3537,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3449,
											"end": 3537,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3517,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3537,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3449,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3567,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3568,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3709,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3580,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3641,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3670,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3703,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3670,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3956,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3838,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3909,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3932,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3889,
											"end": 3950,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3950,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3889,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4101,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3962,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4033,
											"end": 4055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4033,
											"end": 4055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4089,
											"end": 4094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4064,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4208,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4107,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4201,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4172,
											"end": 4202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4214,
											"end": 4334,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4214,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4286,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4303,
											"end": 4308,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4286,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4286,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4286,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4286,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4266,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4266,
											"end": 4328,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4266,
											"end": 4328,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4266,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4214,
											"end": 4334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4214,
											"end": 4334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4340,
											"end": 4481,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4340,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4469,
											"end": 4474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4443,
											"end": 4475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4475,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4443,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4340,
											"end": 4481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4340,
											"end": 4481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4340,
											"end": 4481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4340,
											"end": 4481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4340,
											"end": 4481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4605,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4487,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4558,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 4581,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4593,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4597,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4750,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4611,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4738,
											"end": 4743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4713,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4744,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4713,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4750,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4750,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4847,
											"end": 4852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4829,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4853,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4829,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4854,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4756,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4884,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5015,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4988,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5021,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4988,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 5027,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 5027,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 5027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 5027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 5027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5065,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5179,
											"end": 5188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5177,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5196,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5280,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5163,
											"end": 5280,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5199,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5280,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5163,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5314,
											"end": 5318,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5298,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5298,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5319,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5298,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5473,
											"end": 5476,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5462,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5471,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5419,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5419,
											"end": 5477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5419,
											"end": 5477,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5419,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5394,
											"end": 5478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5641,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5633,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5589,
											"end": 5648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5575,
											"end": 5580,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5564,
											"end": 5649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5760,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5814,
											"end": 5817,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5805,
											"end": 5811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5794,
											"end": 5803,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5760,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 5818,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5760,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5742,
											"end": 5758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5937,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5993,
											"end": 5996,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 5990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 5982,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 5991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5937,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 5997,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5937,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5923,
											"end": 5928,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5919,
											"end": 5935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 5998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5840,
											"end": 6009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 6016,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 6016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 6016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6418,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 6022,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6166,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6142,
											"end": 6149,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6161,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6134,
											"end": 6167,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6251,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6131,
											"end": 6251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6170,
											"end": 6249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6251,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6131,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6393,
											"end": 6400,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6384,
											"end": 6390,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6369,
											"end": 6391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6315,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6315,
											"end": 6401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6315,
											"end": 6401,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6315,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6305,
											"end": 6401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6305,
											"end": 6401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6261,
											"end": 6411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6418,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6418,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@pythnetwork/pyth-sdk-solidity/IPyth.sol",
								"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol",
								"@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
								"CryptoStockContract/contracts/OracleAggregator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getLatestPriceView()": "50d5041d",
							"priceFeedId()": "1999bb9e",
							"pyth()": "f98d06f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pythContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_priceFeedId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPriceView\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyth\",\"outputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getLatestPriceView()\":{\"notice\":\"\\u53ea\\u8bfb\\u67e5\\u8be2\\u4ef7\\u683c\\uff0c\\u4e0d\\u9700\\u8981fee\\uff0c\\u53ea\\u6d88\\u8017\\u666e\\u901a\\u67e5\\u8be2gas\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CryptoStockContract/contracts/OracleAggregator.sol\":\"AggregatorPythView\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]},\"CryptoStockContract/contracts/OracleAggregator.sol\":{\"keccak256\":\"0xa3d95319319ed3b8ebe685edb3a747d0dc05b806d6a6f36d31436fd315108dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a3264b2f74b73f1bd26692698ea4130a00bc539dde22f38161ff168c46f1410\",\"dweb:/ipfs/QmSuvJ9pH98xRE2qXE9f7oGAhwNKbZrw2SKWR6YR91YYTL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 247,
								"contract": "CryptoStockContract/contracts/OracleAggregator.sol:AggregatorPythView",
								"label": "pyth",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IPyth)162"
							},
							{
								"astId": 249,
								"contract": "CryptoStockContract/contracts/OracleAggregator.sol:AggregatorPythView",
								"label": "priceFeedId",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IPyth)162": {
								"encoding": "inplace",
								"label": "contract IPyth",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getLatestPriceView()": {
								"notice": "只读查询价格，不需要fee，只消耗普通查询gas"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
				"ast": {
					"absolutePath": "@pythnetwork/pyth-sdk-solidity/IPyth.sol",
					"exportedSymbols": {
						"IPyth": [
							162
						],
						"IPythEvents": [
							192
						],
						"PythStructs": [
							240
						]
					},
					"id": 163,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
							"file": "./PythStructs.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 241,
							"src": "64:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol",
							"file": "./IPythEvents.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 193,
							"src": "92:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IPythEvents",
										"nameLocations": [
											"397:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 192,
										"src": "397:11:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "397:11:0"
								}
							],
							"canonicalName": "IPyth",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "121:257:0",
								"text": "@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								192
							],
							"name": "IPyth",
							"nameLocation": "388:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "415:669:0",
										"text": "@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
									},
									"functionSelector": "96834ad3",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceUnsafe",
									"nameLocation": "1098:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1130:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "1122:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:26:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "1162:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
													"typeString": "struct PythStructs.Price"
												},
												"typeName": {
													"id": 12,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 11,
														"name": "PythStructs.Price",
														"nameLocations": [
															"1162:11:0",
															"1174:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "1162:17:0"
													},
													"referencedDeclaration": 203,
													"src": "1162:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
														"typeString": "struct PythStructs.Price"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:32:0"
									},
									"scope": 162,
									"src": "1089:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1200:423:0",
										"text": "@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
									},
									"functionSelector": "a4ae35e0",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceNoOlderThan",
									"nameLocation": "1637:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1674:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1666:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "age",
												"nameLocation": "1691:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1686:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1686:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:44:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1749:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1724:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
													"typeString": "struct PythStructs.Price"
												},
												"typeName": {
													"id": 23,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 22,
														"name": "PythStructs.Price",
														"nameLocations": [
															"1724:11:0",
															"1736:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "1724:17:0"
													},
													"referencedDeclaration": 203,
													"src": "1724:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
														"typeString": "struct PythStructs.Price"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:32:0"
									},
									"scope": 162,
									"src": "1628:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1762:925:0",
										"text": "@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
									},
									"functionSelector": "9474f45b",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmaPriceUnsafe",
									"nameLocation": "2701:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2736:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "2728:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 28,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:26:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2793:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "2768:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
													"typeString": "struct PythStructs.Price"
												},
												"typeName": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "PythStructs.Price",
														"nameLocations": [
															"2768:11:0",
															"2780:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "2768:17:0"
													},
													"referencedDeclaration": 203,
													"src": "2768:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
														"typeString": "struct PythStructs.Price"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:32:0"
									},
									"scope": 162,
									"src": "2692:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "2806:472:0",
										"text": "@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."
									},
									"functionSelector": "711a2e28",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmaPriceNoOlderThan",
									"nameLocation": "3292:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3332:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "3324:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 37,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "age",
												"nameLocation": "3349:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "3344:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3344:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:44:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3407:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "3382:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
													"typeString": "struct PythStructs.Price"
												},
												"typeName": {
													"id": 43,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 42,
														"name": "PythStructs.Price",
														"nameLocations": [
															"3382:11:0",
															"3394:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "3382:17:0"
													},
													"referencedDeclaration": 203,
													"src": "3382:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
														"typeString": "struct PythStructs.Price"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3381:32:0"
									},
									"scope": 162,
									"src": "3283:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "3420:535:0",
										"text": "@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."
									},
									"functionSelector": "ef9e5e28",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePriceFeeds",
									"nameLocation": "3969:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "4003:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "3986:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 48,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "3986:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 49,
													"nodeType": "ArrayTypeName",
													"src": "3986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:29:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4031:0:0"
									},
									"scope": 162,
									"src": "3960:72:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "4038:1299:0",
										"text": "@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"
									},
									"functionSelector": "b9256d28",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePriceFeedsIfNecessary",
									"nameLocation": "5351:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "5405:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "5388:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 55,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "5388:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 56,
													"nodeType": "ArrayTypeName",
													"src": "5388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "priceIds",
												"nameLocation": "5444:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "5425:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 58,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 59,
													"nodeType": "ArrayTypeName",
													"src": "5425:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "publishTimes",
												"nameLocation": "5480:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "5462:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "5462:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "5462:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5378:120:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:0:0"
									},
									"scope": 162,
									"src": "5342:174:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "5522:178:0",
										"text": "@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."
									},
									"functionSelector": "d47eed45",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUpdateFee",
									"nameLocation": "5714:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "5753:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "5736:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "5736:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "5736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5726:43:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "feeAmount",
												"nameLocation": "5798:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "5793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:16:0"
									},
									"scope": 162,
									"src": "5705:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "5815:165:0",
										"text": "@notice Returns the required fee to update a TWAP price.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."
									},
									"functionSelector": "5f674e35",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTwapUpdateFee",
									"nameLocation": "5994:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "6037:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "6020:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 77,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "6020:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 78,
													"nodeType": "ArrayTypeName",
													"src": "6020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6010:43:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "feeAmount",
												"nameLocation": "6082:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "6077:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6076:16:0"
									},
									"scope": 162,
									"src": "5985:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "6099:1213:0",
										"text": "@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."
									},
									"functionSelector": "4716e9c5",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parsePriceFeedUpdates",
									"nameLocation": "7326:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "7374:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "7357:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 86,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "7357:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 87,
													"nodeType": "ArrayTypeName",
													"src": "7357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "priceIds",
												"nameLocation": "7413:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "7394:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 89,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 90,
													"nodeType": "ArrayTypeName",
													"src": "7394:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "minPublishTime",
												"nameLocation": "7438:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "7431:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 92,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7431:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "maxPublishTime",
												"nameLocation": "7469:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "7462:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 94,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7347:142:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "priceFeeds",
												"nameLocation": "7547:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "7516:41:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PythStructs.PriceFeed[]"
												},
												"typeName": {
													"baseType": {
														"id": 98,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 97,
															"name": "PythStructs.PriceFeed",
															"nameLocations": [
																"7516:11:0",
																"7528:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 212,
															"src": "7516:21:0"
														},
														"referencedDeclaration": 212,
														"src": "7516:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceFeed_$212_storage_ptr",
															"typeString": "struct PythStructs.PriceFeed"
														}
													},
													"id": 99,
													"nodeType": "ArrayTypeName",
													"src": "7516:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr",
														"typeString": "struct PythStructs.PriceFeed[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7515:43:0"
									},
									"scope": 162,
									"src": "7317:242:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "7565:1495:0",
										"text": "@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n This method will eventually allow the caller to determine whether parsed price feeds should update\n the stored values as well.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n @param storeUpdatesIfFresh flag for the parse function to\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."
									},
									"functionSelector": "3a229d18",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parsePriceFeedUpdatesWithConfig",
									"nameLocation": "9074:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "9132:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9115:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 104,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "9115:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 105,
													"nodeType": "ArrayTypeName",
													"src": "9115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "priceIds",
												"nameLocation": "9171:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9152:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 107,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "9152:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 108,
													"nodeType": "ArrayTypeName",
													"src": "9152:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "minAllowedPublishTime",
												"nameLocation": "9196:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9189:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 110,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9189:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "maxAllowedPublishTime",
												"nameLocation": "9234:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9227:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 112,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "checkUniqueness",
												"nameLocation": "9270:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9265:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "checkUpdateDataIsMinimal",
												"nameLocation": "9300:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9295:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "storeUpdatesIfFresh",
												"nameLocation": "9339:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9334:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9105:259:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "priceFeeds",
												"nameLocation": "9459:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9428:41:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PythStructs.PriceFeed[]"
												},
												"typeName": {
													"baseType": {
														"id": 122,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 121,
															"name": "PythStructs.PriceFeed",
															"nameLocations": [
																"9428:11:0",
																"9440:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 212,
															"src": "9428:21:0"
														},
														"referencedDeclaration": 212,
														"src": "9428:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceFeed_$212_storage_ptr",
															"typeString": "struct PythStructs.PriceFeed"
														}
													},
													"id": 123,
													"nodeType": "ArrayTypeName",
													"src": "9428:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr",
														"typeString": "struct PythStructs.PriceFeed[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "slots",
												"nameLocation": "9499:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "9483:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "9483:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "9483:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9414:100:0"
									},
									"scope": 162,
									"src": "9065:450:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "9521:1194:0",
										"text": "@notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n This method calculates TWAP between two data points by processing the difference in cumulative price values\n divided by the time period. It requires exactly two updates that contain valid price information\n for all the requested price IDs.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the updateData array.\n @dev Reverts if:\n - The transferred fee is not sufficient\n - The updateData is invalid or malformed\n - The updateData array does not contain exactly 2 updates\n - There is no update for any of the given `priceIds`\n - The time ordering between data points is invalid (start time must be before end time)\n @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n @param priceIds Array of price ids to calculate TWAP for\n @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)"
									},
									"functionSelector": "eb942158",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTwapPriceFeedUpdates",
									"nameLocation": "10729:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "10781:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "10764:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 131,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "10764:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 132,
													"nodeType": "ArrayTypeName",
													"src": "10764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "priceIds",
												"nameLocation": "10820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "10801:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 134,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "10801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 135,
													"nodeType": "ArrayTypeName",
													"src": "10801:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10754:80:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "twapPriceFeeds",
												"nameLocation": "10920:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "10885:49:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TwapPriceFeed_$224_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PythStructs.TwapPriceFeed[]"
												},
												"typeName": {
													"baseType": {
														"id": 139,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 138,
															"name": "PythStructs.TwapPriceFeed",
															"nameLocations": [
																"10885:11:0",
																"10897:13:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 224,
															"src": "10885:25:0"
														},
														"referencedDeclaration": 224,
														"src": "10885:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TwapPriceFeed_$224_storage_ptr",
															"typeString": "struct PythStructs.TwapPriceFeed"
														}
													},
													"id": 140,
													"nodeType": "ArrayTypeName",
													"src": "10885:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TwapPriceFeed_$224_storage_$dyn_storage_ptr",
														"typeString": "struct PythStructs.TwapPriceFeed[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10884:51:0"
									},
									"scope": 162,
									"src": "10720:216:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "10942:972:0",
										"text": "@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."
									},
									"functionSelector": "accca7f9",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parsePriceFeedUpdatesUnique",
									"nameLocation": "11928:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "updateData",
												"nameLocation": "11982:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "11965:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 145,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "11965:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 146,
													"nodeType": "ArrayTypeName",
													"src": "11965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "priceIds",
												"nameLocation": "12021:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "12002:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 148,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "12002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 149,
													"nodeType": "ArrayTypeName",
													"src": "12002:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "minPublishTime",
												"nameLocation": "12046:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "12039:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 151,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "12039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "maxPublishTime",
												"nameLocation": "12077:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "12070:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 153,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "12070:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11955:142:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "priceFeeds",
												"nameLocation": "12155:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "12124:41:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PythStructs.PriceFeed[]"
												},
												"typeName": {
													"baseType": {
														"id": 157,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 156,
															"name": "PythStructs.PriceFeed",
															"nameLocations": [
																"12124:11:0",
																"12136:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 212,
															"src": "12124:21:0"
														},
														"referencedDeclaration": 212,
														"src": "12124:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceFeed_$212_storage_ptr",
															"typeString": "struct PythStructs.PriceFeed"
														}
													},
													"id": 158,
													"nodeType": "ArrayTypeName",
													"src": "12124:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr",
														"typeString": "struct PythStructs.PriceFeed[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12123:43:0"
									},
									"scope": 162,
									"src": "11919:248:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "378:11791:0",
							"usedErrors": [],
							"usedEvents": [
								176,
								191
							]
						}
					],
					"src": "39:12131:0"
				},
				"id": 0
			},
			"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
				"ast": {
					"absolutePath": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol",
					"exportedSymbols": {
						"IPythEvents": [
							192
						]
					},
					"id": 193,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPythEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "64:170:1",
								"text": "@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."
							},
							"fullyImplemented": true,
							"id": 192,
							"linearizedBaseContracts": [
								192
							],
							"name": "IPythEvents",
							"nameLocation": "244:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "262:305:1",
										"text": "@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."
									},
									"eventSelector": "d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec",
									"id": 176,
									"name": "PriceFeedUpdate",
									"nameLocation": "578:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "619:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 167,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "publishTime",
												"nameLocation": "638:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "631:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 169,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "631:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "665:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "659:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 171,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "659:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "687:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "680:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 173,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "680:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:104:1"
									},
									"src": "572:126:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "704:376:1",
										"text": "@dev Emitted when the TWAP price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param startTime Start time of the TWAP.\n @param endTime End time of the TWAP.\n @param twapPrice Price of the TWAP.\n @param twapConf Confidence interval of the TWAP.\n @param downSlotsRatio Down slot ratio of the TWAP."
									},
									"eventSelector": "d8b7774079faf4ab389d4e48b46d54e2bb8b66dd0de0d718f61730a9f3c92977",
									"id": 191,
									"name": "TwapPriceFeedUpdate",
									"nameLocation": "1091:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1120:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 178,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1155:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1148:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 180,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1148:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1181:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1174:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 182,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1174:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "twapPrice",
												"nameLocation": "1204:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1198:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 184,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "1198:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": false,
												"mutability": "mutable",
												"name": "twapConf",
												"nameLocation": "1230:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1223:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 186,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1223:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": false,
												"mutability": "mutable",
												"name": "downSlotsRatio",
												"nameLocation": "1255:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1248:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 188,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:165:1"
									},
									"src": "1085:191:1"
								}
							],
							"scope": 193,
							"src": "234:1044:1",
							"usedErrors": [],
							"usedEvents": [
								176,
								191
							]
						}
					],
					"src": "39:1240:1"
				},
				"id": 1
			},
			"@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
				"ast": {
					"absolutePath": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
					"exportedSymbols": {
						"PythStructs": [
							240
						]
					},
					"id": 241,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 194,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PythStructs",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "PythStructs",
							"nameLocation": "73:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PythStructs.Price",
									"id": 203,
									"members": [
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "647:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 203,
											"src": "641:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int64",
												"typeString": "int64"
											},
											"typeName": {
												"id": 195,
												"name": "int64",
												"nodeType": "ElementaryTypeName",
												"src": "641:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "conf",
											"nameLocation": "717:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 203,
											"src": "710:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 197,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "710:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 200,
											"mutability": "mutable",
											"name": "expo",
											"nameLocation": "763:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 203,
											"src": "757:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int32",
												"typeString": "int32"
											},
											"typeName": {
												"id": 199,
												"name": "int32",
												"nodeType": "ElementaryTypeName",
												"src": "757:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 202,
											"mutability": "mutable",
											"name": "publishTime",
											"nameLocation": "848:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 203,
											"src": "843:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 201,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "843:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Price",
									"nameLocation": "608:5:2",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "601:265:2",
									"visibility": "public"
								},
								{
									"canonicalName": "PythStructs.PriceFeed",
									"id": 212,
									"members": [
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1013:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 212,
											"src": "1005:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 204,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1005:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 208,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1065:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 212,
											"src": "1059:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
												"typeString": "struct PythStructs.Price"
											},
											"typeName": {
												"id": 207,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 206,
													"name": "Price",
													"nameLocations": [
														"1059:5:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 203,
													"src": "1059:5:2"
												},
												"referencedDeclaration": 203,
												"src": "1059:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
													"typeString": "struct PythStructs.Price"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "emaPrice",
											"nameLocation": "1158:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 212,
											"src": "1152:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
												"typeString": "struct PythStructs.Price"
											},
											"typeName": {
												"id": 210,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 209,
													"name": "Price",
													"nameLocations": [
														"1152:5:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 203,
													"src": "1152:5:2"
												},
												"referencedDeclaration": 203,
												"src": "1152:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
													"typeString": "struct PythStructs.Price"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceFeed",
									"nameLocation": "960:9:2",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "953:220:2",
									"visibility": "public"
								},
								{
									"canonicalName": "PythStructs.TwapPriceFeed",
									"id": 224,
									"members": [
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1243:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "1235:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 213,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1235:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1296:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "1289:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 215,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1289:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 218,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1354:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "1347:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 217,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1347:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 221,
											"mutability": "mutable",
											"name": "twap",
											"nameLocation": "1399:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "1393:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
												"typeString": "struct PythStructs.Price"
											},
											"typeName": {
												"id": 220,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 219,
													"name": "Price",
													"nameLocations": [
														"1393:5:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 203,
													"src": "1393:5:2"
												},
												"referencedDeclaration": 203,
												"src": "1393:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
													"typeString": "struct PythStructs.Price"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "downSlotsRatio",
											"nameLocation": "2034:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "2027:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 222,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2027:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TwapPriceFeed",
									"nameLocation": "1186:13:2",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "1179:876:2",
									"visibility": "public"
								},
								{
									"canonicalName": "PythStructs.TwapPriceInfo",
									"id": 239,
									"members": [
										{
											"constant": false,
											"id": 226,
											"mutability": "mutable",
											"name": "cumulativePrice",
											"nameLocation": "2190:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "2183:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 225,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "2183:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 228,
											"mutability": "mutable",
											"name": "cumulativeConf",
											"nameLocation": "2223:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "2215:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 227,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2215:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 230,
											"mutability": "mutable",
											"name": "numDownSlots",
											"nameLocation": "2272:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "2265:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 229,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2265:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 232,
											"mutability": "mutable",
											"name": "publishSlot",
											"nameLocation": "2301:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "2294:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 231,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2294:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 234,
											"mutability": "mutable",
											"name": "publishTime",
											"nameLocation": "2329:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "2322:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 233,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2322:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 236,
											"mutability": "mutable",
											"name": "prevPublishTime",
											"nameLocation": "2357:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "2350:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 235,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2350:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 238,
											"mutability": "mutable",
											"name": "expo",
											"nameLocation": "2406:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "2400:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int32",
												"typeString": "int32"
											},
											"typeName": {
												"id": 237,
												"name": "int32",
												"nodeType": "ElementaryTypeName",
												"src": "2400:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TwapPriceInfo",
									"nameLocation": "2141:13:2",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "2134:283:2",
									"visibility": "public"
								}
							],
							"scope": 241,
							"src": "64:2355:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:2381:2"
				},
				"id": 2
			},
			"CryptoStockContract/contracts/OracleAggregator.sol": {
				"ast": {
					"absolutePath": "CryptoStockContract/contracts/OracleAggregator.sol",
					"exportedSymbols": {
						"AggregatorPythView": [
							304
						],
						"IPyth": [
							162
						],
						"IPythEvents": [
							192
						],
						"PythStructs": [
							240
						]
					},
					"id": 305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@pythnetwork/pyth-sdk-solidity/IPyth.sol",
							"file": "@pythnetwork/pyth-sdk-solidity/IPyth.sol",
							"id": 243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 305,
							"sourceUnit": 163,
							"src": "58:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
							"file": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol",
							"id": 244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 305,
							"sourceUnit": 241,
							"src": "109:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorPythView",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "AggregatorPythView",
							"nameLocation": "176:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f98d06f0",
									"id": 247,
									"mutability": "mutable",
									"name": "pyth",
									"nameLocation": "214:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "201:17:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPyth_$162",
										"typeString": "contract IPyth"
									},
									"typeName": {
										"id": 246,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 245,
											"name": "IPyth",
											"nameLocations": [
												"201:5:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 162,
											"src": "201:5:3"
										},
										"referencedDeclaration": 162,
										"src": "201:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPyth_$162",
											"typeString": "contract IPyth"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1999bb9e",
									"id": 249,
									"mutability": "mutable",
									"name": "priceFeedId",
									"nameLocation": "239:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "224:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 248,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "224:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "313:79:3",
										"statements": [
											{
												"expression": {
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "pyth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "323:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPyth_$162",
															"typeString": "contract IPyth"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 258,
																"name": "pythContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "336:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 257,
															"name": "IPyth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "330:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPyth_$162_$",
																"typeString": "type(contract IPyth)"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "330:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPyth_$162",
															"typeString": "contract IPyth"
														}
													},
													"src": "323:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPyth_$162",
														"typeString": "contract IPyth"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "323:26:3"
											},
											{
												"expression": {
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 262,
														"name": "priceFeedId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "359:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 263,
														"name": "_priceFeedId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "373:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "359:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "359:26:3"
											}
										]
									},
									"id": 267,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "pythContract",
												"nameLocation": "277:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "269:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "_priceFeedId",
												"nameLocation": "299:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "291:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:44:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:3"
									},
									"scope": 304,
									"src": "257:135:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "571:383:3",
										"statements": [
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "683:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "658:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
															"typeString": "struct PythStructs.Price"
														},
														"typeName": {
															"id": 280,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 279,
																"name": "PythStructs.Price",
																"nameLocations": [
																	"658:11:3",
																	"670:5:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 203,
																"src": "658:17:3"
															},
															"referencedDeclaration": 203,
															"src": "658:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Price_$203_storage_ptr",
																"typeString": "struct PythStructs.Price"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"arguments": [
														{
															"id": 284,
															"name": "priceFeedId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "707:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 282,
															"name": "pyth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "687:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPyth_$162",
																"typeString": "contract IPyth"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "692:14:3",
														"memberName": "getPriceUnsafe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "687:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$203_memory_ptr_$",
															"typeString": "function (bytes32) view external returns (struct PythStructs.Price memory)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "687:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
														"typeString": "struct PythStructs.Price memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "658:61:3"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 287,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "729:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 288,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "743:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
																"typeString": "struct PythStructs.Price memory"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "745:5:3",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "743:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "729:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "729:21:3"
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 292,
														"name": "expo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "778:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 293,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "792:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
																"typeString": "struct PythStructs.Price memory"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "794:4:3",
														"memberName": "expo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 200,
														"src": "792:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "778:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "778:20:3"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "publishTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "830:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 298,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "844:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Price_$203_memory_ptr",
																"typeString": "struct PythStructs.Price memory"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "846:11:3",
														"memberName": "publishTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "844:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "830:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "830:27:3"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "398:72:3",
										"text": "@notice 只读查询价格，不需要fee，只消耗普通查询gas"
									},
									"functionSelector": "50d5041d",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPriceView",
									"nameLocation": "484:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "534:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "528:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 270,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "528:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "expo",
												"nameLocation": "547:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "541:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 272,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "publishTime",
												"nameLocation": "558:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "553:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "553:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:43:3"
									},
									"scope": 304,
									"src": "475:479:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "167:789:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:925:3"
				},
				"id": 3
			}
		}
	}
}